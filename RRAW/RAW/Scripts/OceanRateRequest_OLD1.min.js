/// <reference path="http://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js" />
/// <reference path="/mootools/core.js"/>
/// <reference path="/mootools/more.js"/>
/// <reference path="/mootools/formcheck/lang/en.js"/>
/// <reference path="/mootools/formcheck/formcheck.js"/>

var errCode = -1;
var currentRateRequestId = 0;
var currentUserId = 0;
var maxRateBasedOnId = 10;
var ratesBasedOn;

//File Upload supporters
var filesInProgress = 0;
var buttonPressed = false;
var ieCheckDone = false;
var processing = false;
var callbackObject;
var uploadedFiles = new Array();


jQuery(document).ready(function () {
	jQuery("#divNotificationTitle").html("Start Posting New Rate Request");
	jQuery("#divNotification").css("top", "154px");
	jQuery("#divNotification").fadeIn();
	jQuery("#divNotificationDescription").html("Loading data...");

	onBodyLoad();

	//AttachFileUploader();

	jQuery("#form1").validationEngine('attach', { promptPosition: "topLeft", isOverflown: true, overflownDIV: "#PanelNewRateRequest", scroll: true });

	jQuery("#txtRateValidDate").width(jQuery("#cmbRateValidFor").width() - 1);

	var d = new Date();
	jQuery("#lblRequestDate").text("Date: " + ((d.getMonth() + 1) < 10 ? "0" : "") + (d.getMonth() + 1) + "/" + (d.getDate() < 10 ? "0" : "") + d.getDate() + "/" + d.getFullYear());

	try {
		locate(this.offsetTop, "raterequestslink", "oceanraterequestlink")
	}
	catch (e) {
	}

	top.document.getElementById("processing_image").style.display = "none";

	jQuery("#txtContainerNo").focus();

	jQuery("#txtShipDate").datepicker({
		onSelect: function (dateText, inst) {
			jQuery("#txtFreightTerm").focus();
		}
	});

	jQuery("#txtRateValidTill").datepicker({
		onSelect: function (dateText, inst) {
			jQuery("#cmbRateBasedOn_1").focus();
		}
	});

	GetAllMasters();
});

function onBodyLoad() {
	try {
		locate(this.offsetTop, 'raterequestslink', 'newraterequestlink');
		top.document.getElementById('processing_image').style.display = 'none';
	}
	catch (e) {
	}

	jQuery('#hidCurrentDateTime').value = GetDate();
	jQuery('#txtHAWBNumber').focus();
}

function AttachFileUploader() {
	//File Upload Handler
	var uploader = new qq.FileUploader({
		// pass the dom node (ex. jQuery(selector)[0] for jQuery users)
		element: document.getElementById('divAttachments'),
		// path to server-side upload script
		action: 'FileUploader/UploadFile.aspx',
		debug: true,

		//For File Upload in FF & Chrome
		onSubmit: function (id, fileName) {
			filesInProgress++;
		},
		onComplete: function (id, fileName, responseJSON) {
			uploadedFiles[id] = responseJSON["filename"];
			filesInProgress--;
			if (filesInProgress <= 0 && buttonPressed == true) {
				if (callbackObject != undefined) {
					jQuery(callbackObject).click();
				}
			}
		}
	});
}

function validateForm() {
	if (jQuery("#form1").validationEngine('validate') == false) { return false; }
}

function DisplayProgress(statusMessage, progressMessage) {
	jQuery("#divUpdateProgress").css("display", "inline");
	jQuery("#lblStatus").innerText = statusMessage;
	if (progressMessage == undefined) {
		progressMessage = statusMessage;
	}
	jQuery("#lblProgressText").innerText = progressMessage;
}

function ConfirmFileUploads(paramCallbackObject) {
	callbackObject = paramCallbackObject;

	if (jQuery.browser.msie && ieCheckDone == false) {
		CheckFileUploadProgress();
		return false;
	}
	if (filesInProgress > 0) {
		buttonPressed = true;
		return false;
	}
	else {
		if (processing) {
			return true;
		}
		else {
			processing = true;
			return true;
		}
	}
}

//For File Upload in IE
function CheckFileUploadProgress() {
	var i = 0;
	filesInProgress = 0;

	jQuery.each(jQuery("[id*='qq-upload-handler-iframe']"), function (key, val) {
		filesInProgress++;
		var outerVal = jQuery(val).contents().children();
		if ((outerVal.length > 0)) {
			var innerVal = outerVal[0].innerHTML;
			if ((innerVal.indexOf('"success":"true"')) >= 0) {
				var fileName = innerVal.split(",")[1].split(":")[1].split("}")[0].split('"')[1]
				uploadedFiles[i++] = fileName;

				filesInProgress--;
			}
		}
	});

	if (filesInProgress <= 0) {
		ieCheckDone = true;
		jQuery(callbackObject).click();
	}
	else {
		var t = setTimeout("CheckFileUploadProgress()", 2000);
	}
}

function GetAllMasters() {
	RRAW.WebServices.Masters.GetAllMasters(onSuccessOfGetAllMasters);
}

function onSuccessOfGetAllMasters(res) {
	onSuccessOfGetAllOceanShipMethods(res["GetAllOceanShipMethods"]);
	onSuccessOfGetAllRegions(res["GetAllRegions"]);
	onSuccessOfGetAllRateValidFor(res["GetAllRateValidFor"]);
	onSuccessOfGetAllRateBasedOn(res["GetAllRateBasedOn"]);

	jQuery("#divNotificationDescription").html("Data loaded successfully.");
	var t = setTimeout("jQuery('#divNotification').fadeOut()", 1000);
}

function onSuccessOfGetAllOceanShipMethods(res) {
	if (Number(res) != NaN && (res == errCode || res == 0)) {
		DisplayError("Unknown error has occured. Please contact Administrator");
		return errCode;
	}

	var shipMethods = res;

	jQuery("#cmbShipMethod").children().remove();

	jQuery('#cmbShipMethod').append(jQuery("<option></option>").attr("value", 0).text("Select"));
	jQuery.each(shipMethods, function (key, val) {
		jQuery('#cmbShipMethod').append(jQuery("<option></option>").attr("value", key).text(val));
	});
}

function onSuccessOfGetAllRegions(res) {
	if (Number(res) != NaN && (res == errCode || res == 0)) {
		DisplayError("Unknown error has occured. Please contact Administrator");
		return errCode;
	}

	var regions = res;

	jQuery("#cmbOriginRegion").children().remove();
	jQuery("#cmbDestRegion").children().remove();

	jQuery('#cmbOriginRegion').append(jQuery("<option></option>").attr("value", 0).text("Select"));
	jQuery('#cmbDestRegion').append(jQuery("<option></option>").attr("value", 0).text("Select"));
	jQuery.each(regions, function (key, val) {
		jQuery('#cmbOriginRegion').append(jQuery("<option></option>").attr("value", key).text(val));
		jQuery('#cmbDestRegion').append(jQuery("<option></option>").attr("value", key).text(val));
	});
}

function onSuccessOfGetAllRateValidFor(res) {
	if (Number(res) != NaN && (res == errCode || res == 0)) {
		DisplayError("Unknown error has occured. Please contact Administrator");
		return errCode;
	}

	var ratesValidFor = res;

	jQuery("#cmbRateValidFor").children().remove();

	jQuery('#cmbRateValidFor').append(jQuery("<option></option>").attr("value", 0).text("Select"));
	jQuery.each(ratesValidFor, function (key, val) {
		jQuery('#cmbRateValidFor').append(jQuery("<option></option>").attr("value", key).text(val));
	});
}

function GetAllRateBasedOn() {
	RRAW.WebServices.Masters.GetAllRateBasedOn(onSuccessOfGetAllRateBasedOn);
}

function onSuccessOfGetAllRateBasedOn(res) {
	if (Number(res) != NaN && (res == errCode || res == 0)) {
		DisplayError("Unknown error has occured. Please contact Administrator");
		return errCode;
	}

	ratesBasedOn = res;

	for (var i = 0; i <= maxRateBasedOnId; i++) {
		jQuery("#cmbRateBasedOn_" + i).children().remove();

		jQuery("#cmbRateBasedOn_" + i).append(jQuery("<option></option>").attr("value", 0).text("Select"));
		jQuery.each(ratesBasedOn, function (key, val) {
			jQuery("#cmbRateBasedOn_" + i).append(jQuery("<option></option>").attr("value", key).text(val));
		});
	}
}

/* Post New Rate Request */

function ConfirmFileUploads() {
	if (jQuery.browser.msie && ieCheckDone == false) {
		callbackObject = this;
		CheckFileUploadProgress();
		return false;
	}
	if (filesInProgress > 0) {
		buttonPressed = true;
		callbackObject = this;
		return false;
	}
	else {
		if (processing) {
			return true;
		}
		else {
			processing = true;
			return true;
		}
	}
}


jQuery("#btnPostNewRateRequest").click(function () {
	$("#UploadFileIframe").contents().find("#Button1").click();
	//formcheck.validate();
	//Display Progress image
	DisplayProgress("Posting new rate request...");

	//ConfirmFileUploads();

	//Refine inputs
	//Refine PostNewOceanRateRequest Inputs
	//	RefineTextBoxStringValue(jQuery("#txtContainerNo"));
	//	RefineTextBoxStringValue(jQuery("#txtOceanHBL"));
	//	RefineTextBoxStringValue(jQuery("#txtFreightTerm"));
	//	RefineTextBoxStringValue(jQuery("#txtShipperName"));
	//	RefineTextBoxStringValue(jQuery("#txtOriginCity"));
	//	RefineTextBoxStringValue(jQuery("#txtOriginPort"));
	//	RefineTextBoxStringValue(jQuery("#txtOriginZipCode"));
	//	RefineTextBoxStringValue(jQuery("#txtConsigneeName"));
	//	RefineTextBoxStringValue(jQuery("#txtDestCity"));
	//	RefineTextBoxStringValue(jQuery("#txtDestPort"));
	//	RefineTextBoxStringValue(jQuery("#txtDestZipCode"));
	//	RefineTextBoxStringValue(jQuery("#txtComment"));

	//Refine PostNewOceanRates Inputs

	//Refine AddAttachments Inputs


	//Validate inputs
	//Validate PostNewOceanRateRequest Inputs
	//	if (IsBlankString(jQuery("#txtContainerNo"))) if (DisplayError("Container Number is required.")) return;
	//	if (IsBlankString(jQuery("#txtOceanHBL"))) if (DisplayError("Ocean HBL is required.")) return;
	//	if (IsBlankString(jQuery("#txtShipDate"))) if (DisplayError("Ship Date is required.")) return;
	//	if (IsBlankString(jQuery("#txtFreightTerm"))) if (DisplayError("Freight Term is required.")) return;
	//	//if (IsBlankCombo(jQuery("#cmbShipMethod"))) if (DisplayError("Please select Ship Method.")) return;
	//	if (IsBlankString(jQuery("#txtShipperName"))) if (DisplayError("Shipper Name is required.")) return;
	//	if (IsBlankString(jQuery("#txtOriginCity"))) if (DisplayError("Origin City is required.")) return;
	//	if (IsBlankString(jQuery("#txtOriginPort"))) if (DisplayError("Origin Port is required.")) return;
	//	if (IsBlankString(jQuery("#txtOriginZipCode"))) if (DisplayError("Origin Zipcode is required.")) return;
	//	if (IsInvalidNumber(jQuery("#txtOriginZipCode"))) if (DisplayError("Invalid Origin Zipcode.")) return;
	//	//if (IsBlankCombo(jQuery("#cmbOriginRegion"))) if (DisplayError("Please select Origin Region.")) return;
	//	if (IsBlankString(jQuery("#txtConsigneeName"))) if (DisplayError("Consignee Name is required.")) return;
	//	if (IsBlankString(jQuery("#txtDestCity"))) if (DisplayError("Destination City is required.")) return;
	//	if (IsBlankString(jQuery("#txtDestPort"))) if (DisplayError("Destination Port is required.")) return;
	//	if (IsBlankString(jQuery("#txtDestZipCode"))) if (DisplayError("Destination Zipcode is required.")) return;
	//	if (IsInvalidNumber(jQuery("#txtDestZipCode"))) if (DisplayError("Invalid Destination Zipcode.")) return;
	//	//if (IsBlankCombo(jQuery("#cmbDestRegion"))) if (DisplayError("Please select Destination Region.")) return;
	//	//if (IsBlankCombo(jQuery("#cmbRateValidFor"))) if (DisplayError("Please select Rates Valid For.")) return;
	//	if (IsBlankString(jQuery("#txtRateValidTill"))) if (DisplayError("Rates Valid Till Date is required.")) return;

	//Validate PostNewOceanRates Inputs

	//Validate AddAttachments Inputs


	//Validate inputs for business logics
	//No logic to validate


	//Call Web Service function if valid
	RRAW.WebServices.OceanRateRequests.PostNewOceanRateRequest(AuthenticationToken(), CurrentUserId(), jQuery("#txtContainerNo").val(), jQuery("#txtOceanHBL").val(), jQuery("#txtShipDate").val(), jQuery("#txtFreightTerm").val(), jQuery("#cmbShipMethod option:selected").text(), jQuery("#txtShipperName").val(), jQuery("#txtOriginCity").val(), jQuery("#txtOriginPort").val(), jQuery("#txtOriginZipCode").val(), jQuery("#cmbOriginRegion option:selected").text(), jQuery("#txtConsigneeName").val(), jQuery("#txtDestCity").val(), jQuery("#txtDestPort").val(), jQuery("#txtDestZipCode").val(), jQuery("#cmbDestRegion option:selected").text(), jQuery("#cmbRateValidFor option:selected").val(), jQuery("#txtRateValidTill").val(), jQuery("#txtComment").val(), onSuccessOfPostNewOceanRateRequest);
});

function onSuccessOfPostNewOceanRateRequest(res) {
	if (Number(res) != NaN && (res == errCode || res == 0)) {
		DisplayError("Unknown error has occured. Please contact Administrator");
		return errCode;
	}

	currentRateRequestId = res;

	jQuery("#divNotificationTitle").html("Rate Request Posted Successfully");
	jQuery("#divNotificationDescription").html("- Email has been sent out to your approver.<br />- You will be notified once your request is being reviewed by client.");
	jQuery("#divNotification").fadeIn();
	var t = setTimeout("jQuery('#divNotification').fadeOut()", 10000);
}
/* Post New Rate Request Over */


jQuery("#btnSave").click(function () {
	DisplayProgress("Saving rate request...");
});

jQuery("#btnApprove").click(function () {
	DisplayProgress("Approving rate request...");
});

jQuery("#btnPostComment").click(function () {
	try {
		if (jQuery("#txtComment").val() != "") {
			DisplayProgress("Posting comment...");
			return true;
		}
		else {
			jQuery("#lblStatus").innerText = "Please fill up comment box to post comment.";

			if (jQuery("#txtComment").value != "") {
				DisplayProgress("Posting comment...");
				return true;
			}
			else {
				jQuery("#lblStatus").innerText = "Please fill up comment box to post comment.";
				jQuery("#txtComment").focus();
				return false;
			}
		}
	}
	catch (e) {
		jQuery("#txtComment").focus();
		return false;
	}
});

jQuery("#btnSendBackToReviseRate").click(function () {
	DisplayProgress("Sending rate request back to revise rates...", "Rejecting rate request...");
});

jQuery("#btnNeedToReviseRate").click(function () {
	DisplayProgress("Setting up rate request to update details...", "Setting up rate request...");
});

jQuery("#btnRevoke").click(function () {
	DisplayProgress("Revoking rate request...");
});

jQuery("#btnReject").click(function () {
	DisplayProgress("Rejecting rate request...");
});

jQuery("#btnRemoveAllComments").click(function () {
	DisplayProgress("Removing comments...");
});

jQuery("#btnDelete").click(function () {
	if (confirm("Are you sure you want to delete this rate request?")) {
		DisplayProgress("Deleting rate request...");
		return true;
	}
	else {
		return false;
	}
});

jQuery("#btnBackToDashboard").click(function () {
	locate('dashboardlink'); window.location = 'Dashboard.aspx';
});

function DisplayProgress(statusMessage, progressMessage) {
	jQuery("#divUpdateProgress").css("display", "inline");
	jQuery("#lblStatus").innerText = statusMessage;
	if (progressMessage == undefined) {
		progressMessage = statusMessage;
	}
	jQuery("#lblProgressText").innerText = progressMessage;
}

function ProgressComplete() {
	jQuery("#divUpdateProgress").style.display = "none";
	jQuery("#lblStatus").innerText = "New rate request posted/saved successfully...";
}

function lookupForFile(controlNumber) {
	jQuery("#fUpload_" + controlNumber)[0].click();
}

function attachFile(controlNumber) {
	if (!document.all) {
		var l = jQuery("#fUpload_" + controlNumber).files.length;
		if (l > 0) {
			jQuery("#linkAttachFile_" + controlNumber).innerHTML = jQuery("#fUpload_" + controlNumber).files[0].name + " (" + Math.round((jQuery("#fUpload_" + controlNumber).files[0].size / 1024)) + "KB)";
			jQuery("#chkAttachment_" + controlNumber).show();
			jQuery("#chkAttachment_" + controlNumber).prop("checked", true);
			jQuery("#divAttachment_" + (controlNumber + 1)).show();
		}
	}
}

jQuery("#divAddMoreCharges").click(function () {
	var contentsToAppend = "<tr><td><input type='text' id='' style='width:97%; text-align:left'/></td><td><select id='cmbRateBasedOn_" + (++maxRateBasedOnId) + "'>";

	var options = "<option value='0'>Select</option>";
	jQuery.each(ratesBasedOn, function (key, val) {
		options += "<option value='" + key + "'>" + val + "</option>";
	});

	contentsToAppend += options;
	contentsToAppend += "</select></td><td><input type='text' id=''/></td><td><input type='text' id=''/></td><td><input type='text' id=''/></td><td><input type='text' id=''/></td></tr>";

	jQuery("#tblRates").append(contentsToAppend);

	moveDivToBottom("PanelNewRateRequest", 300);
});

function moveDivToBottom(divId, minValue) {
	var objDiv = document.getElementById(divId);
	if (objDiv.scrollTop < (minValue + (objDiv.scrollHeight - 992))) {
		objDiv.scrollTop = minValue + (objDiv.scrollHeight - 992);
	}
}

// General functions -- Can be moved to a general js file --
function AuthenticationToken() {
	return getCookie("AuthenticationToken");
}

function CurrentUserId() {
	return getCookie("CurrentUserID");
}

function getCookie(c_name) {
	var i, x, y, ARRcookies = document.cookie.split(";");
	for (i = 0; i < ARRcookies.length; i++) {
		x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
		y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
		x = x.replace(/^\s+|\s+jQuery/g, "");
		if (x == c_name) {
			return unescape(y);
		}
	}
}

function RefineTextBoxStringValue(textBoxInstance) {
	var val = jQuery(textBoxInstance).val();

	val = jQuery.trim(jQuery(textBoxInstance).val());

	jQuery(textBoxInstance).val(val);
}

function IsBlankString(textBoxControl) {
	if (jQuery(textBoxControl).val() == "" || jQuery(textBoxControl).val() == undefined) {
		jQuery(textBoxControl).focus();
		return true;
	}
	else {
		return false;
	}
}

function IsBlankNumber(textBoxControl) {
	if (jQuery(textBoxControl).val() == 0) {
		jQuery(textBoxControl).focus();
		return true;
	}
	else {
		return false;
	}
}

function IsBlankCombo(comboBoxControl) {
	if (jQuery("#" + jQuery(comboBoxControl).prop("id") + " option:selected").val() == 0) {
		jQuery(comboBoxControl).focus();
		return true;
	}
	else {
		return false;
	}
}

function IsInvalidNumber(textBoxControl) {
	if (isNaN(jQuery(textBoxControl).val())) {
		jQuery(textBoxControl).focus();
		return true;
	}
	else {
		return false;
	}
}

//function IsInvalidDate(textBoxControl) {
//	var dtVal = jQuery(textBoxControl).val();

//	var dtArr = dtVal.split("/");

//	if (dtArr[0] >= 1 && dtArr[0] <= 12) {
//		if (dtArr[1] >= 1 && dtArr[1] <= 31) {
//			if (dtArr[0] > 0 && dtArr[0] <= 12) {
//				return false;
//			}
//		}
//	}

//	jQuery(textBoxControl).focus();
//	return true;
//}

function DisplayError(errorMessage, control) {
	if (control != undefined) {
		jQuery(control).focus();
	}

	alert(errorMessage);

	return 1;
}

function GetDate() {
	var t = new Date();
	return ((t.getMonth() + 1) + '/' + t.getDate() + '/' + t.getFullYear() + ' ' + t.getHours() + ':' + t.getMinutes() + ':' + t.getSeconds());
}
// General functions over

jQuery("input[type='text']").keypress(function (e) {
	if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {
		jQuery("#btnPostNewRateRequest").click();
		return true;
	}
});