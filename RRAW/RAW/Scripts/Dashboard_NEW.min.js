/// <reference path="http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js" />

var grid = new Array();

var maxGridNos = 0;

var defaultCurrentPageNumber = 1;
var defaultRowCountPerRequest = 10;

function GridCollection(paramGridId) {
	var posGridId = 0;
	var posDataSPName = 1;
	var posCountSPName = 2;
	var posCSVSPName = 3;
	var posCurrentPageNumber = 4;
	var posRowCountPerRequest = 5;
	var posTotalRowCount = 6;
	var posIsTotalRowCountCollected = 7;
	var posDataCallInstance = 8;
	var posCountCallInstance = 9;

	var gridIndex = -1;

	this.AddGrid = AddGrid;

	if (maxGridNos > 0) {
		for (i = 0; i < maxGridNos; i++) {
			if (grid[i][posGridId] == paramGridId) {
				gridIndex = i;
			}
		}
	}

	if (gridIndex < 0) {
		return null;
	}

	this.gridId = gridId;
	this.gridBodyId = gridBodyId;
	this.dataSPName = dataSPName;
	this.countSPName = countSPName;
	this.csvSPName = csvSPName;
	this.currentPageNumber = currentPageNumber;
	this.rowCountPerRequest = rowCountPerRequest;
	this.totalRowCount = totalRowCount;
	this.isTotalRowCountCollected = isTotalRowCountCollected;
	this.dataCallInstance = dataCallInstance;
	this.countCallInstance = countCallInstance;
	this.setTotalRowCount = setTotalRowCount;
	this.setCurrentPageNumber = setCurrentPageNumber;
	this.setIsTotalRowCountCollected = setIsTotalRowCountCollected;
	this.setDataCallInstance = setDataCallInstance;
	this.setCountCallInstance = setCountCallInstance;

	function AddGrid(gridId, dataSPName, countSPName, csvSPName) {
		grid[maxGridNos] = new Array();
		grid[maxGridNos][posGridId] = gridId;
		grid[maxGridNos][posDataSPName] = dataSPName;
		grid[maxGridNos][posCountSPName] = countSPName;
		grid[maxGridNos][posCSVSPName] = csvSPName;
		grid[maxGridNos][posCurrentPageNumber] = defaultCurrentPageNumber;
		grid[maxGridNos][posRowCountPerRequest] = defaultRowCountPerRequest;
		grid[maxGridNos][posTotalRowCount] = 0;
		grid[maxGridNos][posIsTotalRowCountCollected] = false;
		grid[maxGridNos][posDataCallInstance] = null;
		grid[maxGridNos][posCountCallInstance] = null;

		maxGridNos++;

		return (new GridCollection(gridId));
	}


	function gridId() { return grid[gridIndex][posGridId]; }
	function gridBodyId() { return gridId() + "_body"; }
	function dataSPName() { return grid[gridIndex][posDataSPName]; }
	function countSPName() { return grid[gridIndex][posCountSPName]; }
	function csvSPName() { return grid[gridIndex][posCSVSPName]; }
	function currentPageNumber() { return grid[gridIndex][posCurrentPageNumber]; }
	function rowCountPerRequest() { return grid[gridIndex][posRowCountPerRequest]; }
	function totalRowCount() { return grid[gridIndex][posTotalRowCount]; }
	function isTotalRowCountCollected() { return grid[gridIndex][posIsTotalRowCountCollected]; }
	function dataCallInstance() { return grid[gridIndex][posDataCallInstance]; }
	function countCallInstance() { return grid[gridIndex][posCountCallInstance]; }

	function setTotalRowCount(val) { grid[gridIndex][posTotalRowCount] = val; }
	function setCurrentPageNumber(val) { grid[gridIndex][posCurrentPageNumber] = val; }
	function setIsTotalRowCountCollected(val) { grid[gridIndex][posIsTotalRowCountCollected] = val; }
	function setDataCallInstance(val) { grid[gridIndex][posDataCallInstance] = val; }
	function setCountCallInstance(val) { grid[gridIndex][posCountCallInstance] = val; }
}

$(document).ready(function () {
	PrepareGrid((new GridCollection()).AddGrid("tblRecentActivity", "GetAirRateRequests_TEST", "GetAirRateRequestsCount_TEST", "GetAirRateRequestsCSV_TEST"));

	//PrepareGrid((new GridCollection()).AddGrid("tblRecentActivity2", "GetAirRateRequests_TEST", "GetAirRateRequestsCount_TEST", "GetAirRateRequestsCSV_TEST"));
});

function PrepareGrid(currentGrid) {
	AddBaseHTML(currentGrid);
	AddHeaders(currentGrid);
	RegisterEvents(currentGrid);

	RRAW.WebServices.Test._staticInstance.GetTabularDataColumns(currentGrid.dataSPName(), onSuccessOfGetTabularDataColumns, onFailureOfGetTabularDataColumns, currentGrid);
	
	currentGrid.setDataCallInstance(RRAW.WebServices.Test._staticInstance.GetTabularData(currentGrid.dataSPName(), 1, currentGrid.rowCountPerRequest(), GetFilters(currentGrid), onSuccessOfGetTabularData, onFailureOfGetTabularData, currentGrid));

	GetRequestCounts(currentGrid);
}

function AddBaseHTML(currentGrid) {
	var baseHTML = "<div subject='header'><div id='" + currentGrid.gridId() + "_lblStatusTitle' class='gridTitle'>Recent activity on requests</div></div><div class='body'><table id='" + currentGrid.gridBodyId() + "'></table></div><div subject='footer' class='footer'><div id='" + currentGrid.gridId() + "_tdPageCounts' class='footerPageCounts'>Pages: #/#</div><div class='footerExport'><a href='#' id='" + currentGrid.gridId() + "_linkExportToExcel'>Export To Excel</a> | <a href='#' id='" + currentGrid.gridId() + "_linkExportToCSV'>Export To CSV</a></div></div><div subject='footer' class='pager'>&nbsp;<a href='#' id='" + currentGrid.gridId() + "_linkPageFirst' style='display: none'>First</a> <a href='#' id='" + currentGrid.gridId() + "_linkPagePrevious'style='display: none'>Previous</a> <a href='#' id='" + currentGrid.gridId() + "_linkPageNext' style='display: none'>Next</a> <a href='#' id='" + currentGrid.gridId() + "_linkPageLast' style='display: none'>Last</a>";
	$("#" + currentGrid.gridId()).append(baseHTML);

	$("#" + currentGrid.gridId()).addClass("grid");
}

function AddHeaders(currentGrid) {
	var headerContents;

	headerContents = "<th style='min-width: 50px;max-width: 50px;'>ID<input type='text' style='width: 95%' id='" + currentGrid.gridId() + "_txtFilter_ID'/></th>";
	headerContents += "<th style='min-width: 100px;max-width: 100px;'>Request Date<input type='text' id='" + currentGrid.gridId() + "_txtFilter_RequestDate'/></th>";
	headerContents += "<th style='min-width: 100px;max-width: 100px;'>Requestor<input type='text' id='" + currentGrid.gridId() + "_txtFilter_Requestor'/></th>";
	headerContents += "<th style='min-width: 100px;max-width: 100px;'>Origin Port<input type='text' id='" + currentGrid.gridId() + "_txtFilter_OriginPort'/></th>";
	headerContents += "<th style='min-width: 100px;max-width: 100px;'>Origin Zipcode<input type='text' id='" + currentGrid.gridId() + "_txtFilter_OriginZipcode'/></th>";
	headerContents += "<th style='min-width: 150px;max-width: 150px;'>Destination Port<input type='text' id='" + currentGrid.gridId() + "_txtFilter_DestPort'/></th>";
	headerContents += "<th style='min-width: 150px;max-width: 150px;'>Destination Zipcode<input type='text' id='" + currentGrid.gridId() + "_txtFilter_DestZipcode'/></th>";
	headerContents += "<th style='min-width: 125px;max-width: 125px;'>Current Approver<input type='text' id='" + currentGrid.gridId() + "_txtFilter_CurrentApprover'/></th>";
	headerContents += "<th style='width:100%'>Last Comment<input type='text' id='" + currentGrid.gridId() + "_txtFilter_LastComment'/></th>";

	$("#" + currentGrid.gridBodyId()).append("<tr class='header'>" + headerContents + "</tr>");
}

function onFailureOfGetTabularDataColumns(res) {
	if (currentGrid.dataCallInstance().get_executor().get_aborted()) {
		return;
	}
	alert("Error");
	//window.location = "Errors.aspx?Operation=GetRequests&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfGetTabularDataColumns(res, data) {
	var currentGrid = data;
	var headerContents;
	
	$.each(res, function (key, val) {
		headerContents += "<th>" + val + "</th>";
	});

	$("#" + currentGrid.gridBodyId()).append("<tr style='background-color:" + rowColor + ";'>" + headerContents + "</tr>");
}

function RegisterEvents(currentGrid) {
	$("#" + currentGrid.gridId() + "_linkPageFirst").live("click", function () {
		currentGrid.setCurrentPageNumber(1);
		CollectRequestsOnPageChange(currentGrid);
	});

	$("#" + currentGrid.gridId() + "_linkPagePrevious").live("click", function () {
		currentGrid.setCurrentPageNumber(currentGrid.currentPageNumber() - 1);
		CollectRequestsOnPageChange(currentGrid);
	});

	$("#" + currentGrid.gridId() + "_linkPageNext").live("click", function () {
		currentGrid.setCurrentPageNumber(currentGrid.currentPageNumber() + 1);
		CollectRequestsOnPageChange(currentGrid);
	});

	$("#" + currentGrid.gridId() + "_linkPageLast").live("click", function () {
		currentGrid.setCurrentPageNumber(Math.floor(currentGrid.totalRowCount() / currentGrid.rowCountPerRequest()));
		CollectRequestsOnPageChange(currentGrid);
	});

	$("[id^='" + currentGrid.gridId() + "_txtFilter_']").live("keyup", function (e) {
		//if (e.keyCode == '13') {
		currentGrid.setCurrentPageNumber(1);
		CollectRequestsOnPageChange(currentGrid);
		//}
	});

	$("#" + currentGrid.gridId() + "_linkExportToCSV").live("click", function () {
		GetRequestsFile("CSV", currentGrid);
	});

	$("#" + currentGrid.gridId() + "_linkExportToExcel").live("click", function () {
		GetRequestsFile("Excel", currentGrid);
	});
}

function AbortDataCall(currentGrid) {
	if (currentGrid.dataCallInstance() != null) {
		currentGrid.dataCallInstance().get_executor().abort();
	}
}

function onFailureOfGetTabularData(res) {
	if (currentGrid.dataCallInstance().get_executor().get_aborted()) {
		return;
	}
	alert("Error");
	//window.location = "Errors.aspx?Operation=GetRequests&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfGetTabularData(res, data) {
	var currentGrid = data;
	var rowCount = 0;
	var lastRowNum = 0;

	$("#" + currentGrid.gridBodyId() + " td").remove();

	var rowColor;

	$.each(res, function (id, row) {
		var dataContents;
		dataContents = "<td style='text-align:right'>" + id + "</td>";
		dataContents += "<td style='text-align:center'>" + row.RequestDate + "</td>";
		dataContents += "<td>" + row.Requestor + "</td>";
		dataContents += "<td>" + row.OriginAirport + "</td>";
		dataContents += "<td>" + row.OriginZipcode + "</td>";
		dataContents += "<td>" + row.DestAirport + "</td>";
		dataContents += "<td>" + row.DestZipcode + "</td>";
		dataContents += "<td>" + row.CurrentApprover + "</td>";
		dataContents += "<td>" + row.OriginComment + "</td>";

		if (row.RowNum % 2 == 0) {
			rowColor = "#EFF3FB";
		}
		else {
			rowColor = "#FFF";
		}

		$("#" + currentGrid.gridBodyId()).append("<tr style='background-color:" + rowColor + ";'>" + dataContents + "</tr>");

		rowCount++;
		lastRowNum = row.RowNum;
	});
}

function GetRequestCounts(currentGrid) {
	AbortCountCall(currentGrid);

	currentGrid.setCountCallInstance(RRAW.WebServices.Test._staticInstance.GetTabularDataRowCount(currentGrid.countSPName(), GetFilters(currentGrid), onSuccessOfGetRequestsCount, onFailureOfGetRequestsCount, currentGrid));
}

function AbortCountCall(currentGrid) {
	if (currentGrid.countCallInstance() != null) {
		currentGrid.countCallInstance().get_executor().abort();
	}
}

function onFailureOfGetRequestsCount(res) {
	if (currentGrid.countCallInstance().get_executor().get_aborted()) {
		return;
	}
	alert("Error");
	//window.location = "Errors.aspx?Operation=GetRequestsCount&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfGetRequestsCount(res, data) {
	var currentGrid = data;

	currentGrid.setIsTotalRowCountCollected(true);

	currentGrid.setTotalRowCount(res);

	var totalPages;
	if (currentGrid.totalRowCount() > 0 && currentGrid.totalRowCount() < currentGrid.rowCountPerRequest()) {
		totalPages = 1;
	}
	else {
		totalPages = Math.floor(currentGrid.totalRowCount() / currentGrid.rowCountPerRequest());
	}

	$("#" + currentGrid.gridId() + "_tdPageCounts").html("Pages: " + currentGrid.currentPageNumber() + "/" + totalPages);

	$("#" + currentGrid.gridId() + "_linkPageFirst").hide();
	$("#" + currentGrid.gridId() + "_linkPagePrevious").hide();
	$("#" + currentGrid.gridId() + "_linkPageNext").hide();
	$("#" + currentGrid.gridId() + "_linkPageLast").hide();

	if (currentGrid.currentPageNumber() > 1) {
		$("#" + currentGrid.gridId() + "_linkPageFirst").show();
		$("#" + currentGrid.gridId() + "_linkPagePrevious").show();
	}

	if ((!currentGrid.isTotalRowCountCollected()) || (Math.floor(currentGrid.totalRowCount() / currentGrid.rowCountPerRequest()) > currentGrid.currentPageNumber())) {
		$("#" + currentGrid.gridId() + "_linkPageNext").show();
	}

	if (currentGrid.currentPageNumber() < (Math.floor(currentGrid.totalRowCount() / currentGrid.rowCountPerRequest()))) {
		$("#" + currentGrid.gridId() + "_linkPageLast").show();
	}
}

//$("[id^='linkPage_']").live("click", function () {
//$(this).prop("id").split("_")[1];

function CollectRequestsOnPageChange(currentGrid) {
	AbortDataCall(currentGrid);

	currentGrid.setDataCallInstance(RRAW.WebServices.Test._staticInstance.GetTabularData(currentGrid.dataSPName(), (currentGrid.currentPageNumber() * currentGrid.rowCountPerRequest()) - currentGrid.rowCountPerRequest() + 1, currentGrid.rowCountPerRequest(), GetFilters(currentGrid), onSuccessOfGetRequests, onFailureOfGetRequests, currentGrid));

	GetRequestCounts(currentGrid);
}

function GetRequestsFile(fileType, currentGrid) {
	RRAW.WebServices.Test._staticInstance.GetTabularDataCSVFile(currentGrid.csvSPName(), "Requests", fileType, "Requests", GetFilters(currentGrid), onSuccessOfGetRequestsCSV, onFailureOfGetRequestsCSV);
}

function onFailureOfGetRequestsCSV(res) {
	window.location = "Errors.aspx?Operation=GetRequestsCount&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfGetRequestsCSV(res) {
	window.location = res;
}

function GetFilters(currentGrid) {
	var res = {
		"ID": $("#" + currentGrid.gridId() + "_txtFilter_ID").val(),
		"RequestDate": $("#" + currentGrid.gridId() + "_txtFilter_RequestDate").val(),
		"Requestor": $("#" + currentGrid.gridId() + "_txtFilter_Requestor").val(),
		"OriginPort": $("#" + currentGrid.gridId() + "_txtFilter_OriginPort").val(),
		"OriginZipcode": $("#" + currentGrid.gridId() + "_txtFilter_OriginZipcode").val(),
		"DestPort": $("#" + currentGrid.gridId() + "_txtFilter_DestPort").val(),
		"DestZipcode": $("#" + currentGrid.gridId() + "_txtFilter_DestZipcode").val(),
		"CurrentApprover": $("#" + currentGrid.gridId() + "_txtFilter_CurrentApprover").val(),
		"LastComment": $("#" + currentGrid.gridId() + "_txtFilter_LastComment").val()
	};

	return res;
}

/*$("#txtSearch").keyup(function () {
$("#" + gridBodyId tr").css("display", "block");
if ($("#txtSearch").val() != "") {
$("#" + gridBodyId tr").css("display", "none");
//$("td:contains('" + $("#txtSearch").val() + "')").css("color", "red");
$("#" + gridBodyId td:contains('" + $("#txtSearch").val() + "')").parent().css("display", "block");
}
});*/