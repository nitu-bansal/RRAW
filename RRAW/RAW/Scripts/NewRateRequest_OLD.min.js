/// <reference path="http://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js" />
/// <reference path="../Validations/jquery.validationEngine.js" />

//File Upload supporters
var filesInProgress = 0;
var buttonPressed = false;
var ieCheckDone = false;
var processing = false;
var callbackObject;
var uploadedFiles = new Array();


jQuery(document).ready(function () {
	if ($.browser.msie && $.browser.version == "7.0") {
		$("input[type='button']").css("min-width", "0");
		$("input[type='submit']").css("min-width", "0");
	}

	onBodyLoad();

	AttachFileUploader();

	jQuery("#form1").validationEngine('attach', { promptPosition: "topLeft", isOverflown: true, overflownDIV: "#PanelNewRateRequest", scroll: true });
});

function onBodyLoad() {
	try {
		locate(this.offsetTop, 'raterequestslink', 'newraterequestlink');
	}
	catch (e) {
	}
	top.document.getElementById('processing_image').style.display = 'none';

	jQuery('#hidCurrentDateTime').value = GetDate();
	jQuery('#txtHAWBNumber').focus();
}

function AttachFileUploader() {
	//File Upload Handler
	var uploader = new qq.FileUploader({
		// pass the dom node (ex. jQuery(selector)[0] for jQuery users)
		element: document.getElementById('divAttachments'),
		// path to server-side upload script
		action: 'FileUploader/UploadFile.aspx',
		debug: true,

		//For File Upload in FF & Chrome
		onSubmit: function (id, fileName) {
			filesInProgress++;
		},
		onComplete: function (id, fileName, responseJSON) {
			uploadedFiles[id] = responseJSON["filename"];
			filesInProgress--;
			if (filesInProgress <= 0 && buttonPressed == true) {
				if (callbackObject != undefined) {
					jQuery(callbackObject).click();
				}
			}
		}
	});
}

function validateForm() {
	if (jQuery("#form1").validationEngine('validate') == false) { return false; }
}

function DisplayProgress(statusMessage, progressMessage) {
	jQuery("#divUpdateProgress").css("display", "inline");
	jQuery("#lblStatus").innerText = statusMessage;
	if (progressMessage == undefined) {
		progressMessage = statusMessage;
	}
	jQuery("#lblProgressText").innerText = progressMessage;
}

function ConfirmFileUploads(paramCallbackObject) {
	callbackObject = paramCallbackObject;

	if (jQuery.browser.msie && ieCheckDone == false) {
		CheckFileUploadProgress();
		return false;
	}
	if (filesInProgress > 0) {
		buttonPressed = true;
		return false;
	}
	else {
		if (processing) {
			return true;
		}
		else {
			processing = true;
			return true;
		}
	}
}

//For File Upload in IE
function CheckFileUploadProgress() {
	var i = 0;
	filesInProgress = 0;

	jQuery.each(jQuery("[id*='qq-upload-handler-iframe']"), function (key, val) {
		filesInProgress++;
		var outerVal = jQuery(val).contents().children();
		if ((outerVal.length > 0)) {
			var innerVal = outerVal[0].innerHTML;
			if ((innerVal.indexOf('"success":"true"')) >= 0) {
				var fileName = innerVal.split(",")[1].split(":")[1].split("}")[0].split('"')[1]
				uploadedFiles[i++] = fileName;

				filesInProgress--;
			}
		}
	});

	if (filesInProgress <= 0) {
		ieCheckDone = true;
		jQuery(callbackObject).click();
	}
	else {
		var t = setTimeout("CheckFileUploadProgress()", 2000);
	}
}

jQuery("#btnPostNewRateRequest").click(function () {
	return validateForm();

	if (ConfirmFileUploads(this) == false) return false;
	else {
		DisplayProgress('Posting new rate request...');
	}
});

function btnApprove_onClick() {
	return validateForm();

	if (ConfirmFileUploads(this) == false) return false;
	else {
		DisplayProgress('Approving rate request...');
	}
}

function btnSave_onClick() {
	return validateForm();

	if (ConfirmFileUploads(this) == false) return false;
	else {
		DisplayProgress('Saving rate request...');
	}
}

function btnApproveAsAdhoc_onClick() {
	return validateForm();

	if (ConfirmFileUploads(this) == false) return false;
	else {
		DisplayProgress('Approving rate request as Adhoc...', 'Approving rate request...');
	}
}

function btnTransferToTariff_onClick() {
	return validateForm();

	if (ConfirmFileUploads(this) == false) return false;
	else {
		DisplayProgress('Transfering rate request to tariff...', 'Transfering to Tariff...');
	}
}

function btnSendBackToReviseRate_onClick() {
	DisplayProgress('Sending rate request back to revise rates...', 'Rejecting rate request...');
}

function btnRemoveAllComments_onClick() {
	DisplayProgress('Removing comments...');
}

function btnPostComment_onClick() {
	try {
		if (document.getElementById('txtComment').innerText != "") {
			DisplayProgress('Posting comment...');
			return true;
		}
		else {
			document.getElementById('lblStatus').innerText = 'Please fill up comment box to post comment.';

			if (document.getElementById('txtComment').value != "") {
				DisplayProgress('Posting comment...');
				return true;
			}
			else {
				document.getElementById('lblStatus').innerText = 'Please fill up comment box to post comment.';
				document.getElementById('txtComment').focus();
				return false;
			}
		}
	}
	catch (e) {
		document.getElementById('txtComment').focus();
		return false;
	}
}

function btnNeedToReviseRate_onClick() {
	DisplayProgress('Setting up rate request to update details...', 'Setting up rate request...');
}

function btnReject_onClick() {
	DisplayProgress('Rejecting rate request...');
}

function btnReject_onClick() {
	DisplayProgress('Revoking rate request...');
}

function btnDelete_onClick() {
	var r = confirm('Are you sure you want to delete this rate request?');
	if (r == true) {
		DisplayProgress('Deleting rate request...');

		return true;
	}
	else {
		return false;
	}
}
/*-------------------------------------------------------------------------*/


//Parsing...
function trim(data) {
	if (data.length > 0) {
		return data.replace(/^\s*|\s*jQuery/g, '');
	} else {
		return "";
	}
}
function setValue(id, value) {
	document.getElementById(id).value = value;
}
function getData(id) {
	var data = document.getElementById(id).value;
	data = data.split("\n");

	var hawbnumber = '';
	var servicelevel = '';
	var servicetype = ''
	//var shipmentdate = ''
	var chgwgt = '';
	var shpname = '';
	var shpcity = '';
	var shpzip = '';
	var shoriportcode = '';
	var shpregion = ''
	var consname = ''
	var conportcode = '';
	var concity = '';
	var constate = '';
	var conzip = '';
	var conregion = '';
	var concntrycode = '';
	try {
		if (data.length > 0) {
			//var title = data[0].substr(28, 19); // " I039                       AIR FREIGHT BOOKING              26/11/10  14:38:30 ".indexOf("AIR FREIGHT BOOKING",0);
			//if (title == "AIR FREIGHT BOOKING") {
			if (data[0].indexOf("AIR FREIGHT BOOKING") >= 0) {
				try {
					//shipmentdate = trim(data[0].split(title)[1]);
				} catch (e) { }
				try {
					hawbnumber = trim(data[1].split("HAWB Number")[1]);
				} catch (e) { }
				try {
					servicelevel = trim(data[11].split("Service Level")[1].substr(0, 2));
				} catch (e) { }
				try {
					servicetype = trim(data[11].split("Service Type")[1].substr(0, 4));
				} catch (e) { }

				try {
					chgwgt = trim(data[12].split("Expect Pcs/Wgt/Vol")[1].substr(12, 6));
				} catch (e) { }

				try {
					shpname = trim(data[2].split("Name")[1]);
				} catch (e) { }

				shoriportcode = "";
				try {
					if (trim(data[7].substr(48, 81 - 48)).length > 0) {
						shpcity = trim(data[7].substr(45, 81 - 48));
					} else {
						shpcity = trim(data[5].substr(45, 81 - 48));
						datazip = trim(data[5].substr(45, 81 - 48)).split(",");
						for (var i = 0; i < datazip.length; i++) {
							if (parseInt(datazip[i])) {
								shpzip = trim(datazip[i]);
								break;
							}
						}
					}
				} catch (e) { }

				shpregion = "";
				try {
					consname = trim(data[9].split("Name")[1]);
				}
				catch (e) { }
				//tempcity = data[10].substr(48,81-48);
				try {
					if (trim(data[13].substr(48, 81 - 48)).length > 0) {
						constate = trim(data[13].substr(48, 81 - 48));
					} else {
						concity = trim(data[11].substr(48, 81 - 48));
						datazip = trim(data[11].substr(48, 81 - 48)).split(" ");
						for (i = 0; i < datazip.length; i++) {
							if (parseInt(datazip[i])) {
								conzip = trim(datazip[i]);
							}
						}
						constate = trim(data[12].substr(48, 81 - 48));
					}
					concntrycode = "";
				} catch (e) { }
				//} else if (trim(data[0].substr(23, 34)) == "Export House Bill Job Registration") {
			} else if (data[0].indexOf("Export House Bill Job Registration") >= 0) {

				try {
					hawbnumber = trim(data[2].substr(4, 22));
				} catch (e) { }

				try {
					//shipmentdate = trim(data[0].substr(61, 81 - 61));
				} catch (e) { }

				servicelevel = "";
				servicetype = "";

				try {
					chgwgt = trim(data[20].substr(72, 81 - 72));
				} catch (e) { }

				try {
					shpname = trim(data[6].substr(7, 31));
				} catch (e) { }

				shoriportcode = "";
				try {
					shpcity = trim(data[11].substr(7, 30));
				} catch (e) { }
				try {
					if (trim(data[10].split("4")[1]).length > 0) {
						constate = trim(data[10].split("4")[1]);
					} else {
						datazip = data[8].substr(7, 30).split(",");
						for (i = 0; i < datazip.length; i++) {
							if (parseInt(datazip[i])) {
								shpzip = trim(datazip[i]);
								break;
							}
						}
					}
				} catch (e) { }

				shpregion = "";
				try {
					consname = trim(data[6].substr(45, 81 - 45));
					concity = trim(data[11].substr(46, 81 - 46));
				} catch (e) { }

				try {
					if (trim(data[10].split("4")[2]).length > 0) {
						constate = trim(data[10].split("4")[2]);
					} else {
						datazip = data[8].substr(32, 81 - 30).split(",");
						conzip = trim(data[8].substr(32, 81 - 30));
						constate = trim(data[9].substr(45, 81 - 42));
						for (i = 0; i < datazip.length; i++) {
							if ((new Number(datazip[i])).toString() != "NaN") {
								conzip = trim(datazip[i]);
								break;
							}
						}
					}
				} catch (e) { }
				//conzip =trim(data[42].split(" ")[data[42].split(" ").length-1]);
				// constate = "";
				concntrycode = "";
			} else {
				alert("Please enter AIR FREIGHT BOOKING OR Export House Bill Job Registration !");
			}
		}
	} catch (e) {
		alert(e.message);
		return false;
	}
	setValue("txtHAWBNumber", hawbnumber);
	//setValue("txtShipDate", shipmentdate);
	setValue("txtWeight", chgwgt);
	setValue("cmbServiceLevel", servicelevel);
	setValue("cmbForwarderService", servicetype);
	setValue("txtShipperName", shpname);
	setValue("txtOriginCity", shpcity);
	setValue("txtOriginZipCode", shpzip);
	setValue("txtOriginAirport", shoriportcode);
	setValue("cmbOriginRegion", shpregion);
	setValue("txtConsigneeName", consname);
	setValue("txtDestAirport", conportcode);
	setValue("txtDestCity", concity);
	setValue("txtDestState", constate);
	setValue("txtDestZipCode", conzip);
	setValue("cmbDestRegion", conregion);
	setValue("cmbDestCountry", concntrycode);
}

function lookupForFile(controlNumber) {
	//document.getElementById('fUpload_' + controlNumber).click();
	jQuery("#fUpload_" + controlNumber)[0].click();
	//jQuery('#<%=fUpload_1.ClientID %>').click();
}

function attachFile(controlNumber) {
	if (!document.all) {
		var l = document.getElementById('fUpload_' + controlNumber).files.length;
		if (l > 0) {
			document.getElementById('linkAttachFile_' + controlNumber).innerHTML = document.getElementById('fUpload_' + controlNumber).files[0].name + " (" + Math.round((document.getElementById('fUpload_' + controlNumber).files[0].size / 1024)) + "KB)";
			jQuery('#chkAttachment_' + controlNumber).show();
			jQuery('#chkAttachment_' + controlNumber).prop("checked", true);
			jQuery('#divAttachment_' + (controlNumber + 1)).show();
		}
	}
}

function moveDivToBottom(divId) {
	var objDiv = document.getElementById(divId);
	objDiv.scrollTop = objDiv.scrollHeight;
}

/* General functions start*/

function GetDate() {
	var t = new Date();
	return ((t.getMonth() + 1) + '/' + t.getDate() + '/' + t.getFullYear() + ' ' + t.getHours() + ':' + t.getMinutes() + ':' + t.getSeconds());
}

/* General functions over */