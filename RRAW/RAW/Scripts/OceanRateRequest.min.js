/// <reference path="http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js" />
/// <reference path="FormValidation.js" />
/// <reference path="../OceanRateRequest.aspx" />

var errCode = -1;
var maxRateBasedOnIdValue = 9999;
var maxRateBasedOnId = maxRateBasedOnIdValue;
var ratesBasedOn;
var fileUploadComplete = false;
var callbackObject;
var maxFileUploadChecks = 60;
var fileUploadChecked = 0;
var fileUploadError = false;
var currentRateRequestId = 0;
var currentUserId = 0;
var currentUserType;
var currentRateRequestHolders;
var currentRateRequestGenerator;
var currentRateRequestApprover;
var uploadedFiles;
var oceanRateRequestAttachmentTypeID = 8;
var rateRequestAttachmentsServerPath = "DownloadFile.aspx?FileName=~/Attachments/RateRequestAttachment/";
var mastersLoadComplete = false;
var rateRequestJSON;
var existingRates;
var collectedRates;
var isRateRequestUpdated;

var maxJSONCollectionCount = 2;
var rateRequestJSONCollectionCount = 0;
var previousCommentsJSONCollectionCount = 0;
var mastersJSONCollectionCount = 0;


$(document).ready(function () {
    currentUserId = GetCookie("CurrentUserID");
    currentUserType = GetCookie("CurrentUserType");
    currentRateRequestId = GetQueryString("RateRequestID");

    if (currentRateRequestId > 0) {
        $("#lblTitle").html("Ocean Rate Request Details (ID: " + currentRateRequestId + ")");

        ShowNotification("Collecting rate request details...", "- Collecting rate request data...<br/>- Collecting authorization summary...<br/>- Collecting Attachments...", 5000);

        GetAllOceanMasters();
        GetRateRequest();
    }
    else {
        $("#lblTitle").html("New Ocean Rate Request");
        FillDefaultValue();
        GetAllOceanMasters();
        $("#UploadFileIframe").attr("src", "UploadFilePage.aspx");
    }

    AfterLoadAdjustments();
});

function FillDefaultValue() {
    var id = 0;
    $.each($("[id^='txtRateTitle_']"), function (key, item) {
        id = $(item).prop("id").split("_")[1];
        if ($("#txtRateTitle_" + id).html() == "BAF:" || $("#txtRateTitle_" + id).html() == "CAF:" || $("#txtRateTitle_" + id).html() == "GRI/RR:" || $("#txtRateTitle_" + id).html() == "PSS:") {
            //$("#cmbRateBasedOn_" + id).select;
            document.getElementById("txtPerCBM_" + id).value = "VATOS";
            document.getElementById("txtPer20GP_" + id).value = "VATOS";
            document.getElementById("txtPer40GP_" + id).value = "VATOS";
            document.getElementById("txtPer40HC_" + id).value = "VATOS";
            //alert($("#txtPerCBM_" + id).value+",,,,,,,,,");
        }
    });
}

function DisableFields() {
    $("#txtContainerNo").attr("disabled", "disabled");
    $("#txtOceanHBL").attr("disabled", "disabled");
    $("#txtShipDate").attr("disabled", "disabled");
    $("#txtFreightTerm").attr("disabled", "disabled");
    $("#cmbWDShipMethod").attr("disabled", "disabled");
    $("#txtCarrierName").attr("disabled", "disabled");
    $("#txtShipperName").attr("disabled", "disabled");
    $("#txtOriginCity").attr("disabled", "disabled");
    $("#txtOriginPort").attr("disabled", "disabled");
    $("#txtOriginZipcode").attr("disabled", "disabled");
    $("#cmbOriginRegion").attr("disabled", "disabled");
    $("#txtConsigneeName").attr("disabled", "disabled");
    $("#txtDestCity").attr("disabled", "disabled");
    $("#txtDestPort").attr("disabled", "disabled");
    $("#txtDestZipcode").attr("disabled", "disabled");
    $("#cmbDestRegion").attr("disabled", "disabled");
    $("#cmbRatesValidFor").attr("disabled", "disabled");
    $("#txtRatesValidTill").attr("disabled", "disabled");

    var id = 0;
    $.each($("[id^='txtRateTitle_']"), function (key, item) {
        id = $(item).prop("id").split("_")[1];

        $("#txtRateTitle_" + id).attr("disabled", "disabled");
        $("#cmbRateBasedOn_" + id).attr("disabled", "disabled");
        $("#txtPerCBM_" + id).attr("disabled", "disabled");
        $("#txtPer20GP_" + id).attr("disabled", "disabled");
        $("#txtPer40GP_" + id).attr("disabled", "disabled");
        $("#txtPer40HC_" + id).attr("disabled", "disabled");
    });

    $("[id^='btnRemoveRateRow_']").hide();
    $("[id^='btnEraseRateRow_']").hide();
}

function EnableFields() {
    $("#txtContainerNo").removeAttr("disabled");
    $("#txtOceanHBL").removeAttr("disabled");
    $("#txtShipDate").removeAttr("disabled");
    $("#txtFreightTerm").removeAttr("disabled");
    $("#cmbWDShipMethod").removeAttr("disabled");
    $("#txtCarrierName").removeAttr("disabled");
    $("#txtShipperName").removeAttr("disabled");
    $("#txtOriginCity").removeAttr("disabled");
    $("#txtOriginPort").removeAttr("disabled");
    $("#txtOriginZipcode").removeAttr("disabled");
    $("#cmbOriginRegion").removeAttr("disabled");
    $("#txtConsigneeName").removeAttr("disabled");
    $("#txtDestCity").removeAttr("disabled");
    $("#txtDestPort").removeAttr("disabled");
    $("#txtDestZipcode").removeAttr("disabled");
    $("#cmbDestRegion").removeAttr("disabled");
    $("#cmbRatesValidFor").removeAttr("disabled");
    $("#txtRatesValidTill").removeAttr("disabled");

    var id = 0;
    $.each($("[id^='txtRateTitle_']"), function (key, item) {
        id = $(item).prop("id").split("_")[1];

        $("#txtRateTitle_" + id).removeAttr("disabled");
        $("#cmbRateBasedOn_" + id).removeAttr("disabled");
        $("#txtPerCBM_" + id).removeAttr("disabled");
        $("#txtPer20GP_" + id).removeAttr("disabled");
        $("#txtPer40GP_" + id).removeAttr("disabled");
        $("#txtPer40HC_" + id).removeAttr("disabled");
    });

    $("[id^='btnRemoveRateRow_']").show();
    $("[id^='btnEraseRateRow_']").show();

    $($("#UploadFileIframe").contents().find("input[type='file']")).removeAttr("disabled");
}

function AfterLoadAdjustments() {
    try {
        top.document.getElementById('processing_image').style.display = 'none';
    }
    catch (e) {
    }

    isRateRequestUpdated = true;

    $('#hidCurrentDateTime').value = GetCurrentDate();
    $('#txtHAWBNumber').focus();

    $("#txtRateValidDate").width($("#cmbRatesValidFor").width() - 1);

    var d = new Date();
    $("#lblRequestDate").text("Date: " + ((d.getMonth() + 1) < 10 ? "0" : "") + (d.getMonth() + 1) + "/" + (d.getDate() < 10 ? "0" : "") + d.getDate() + "/" + d.getFullYear());

    $("#txtContainerNo").focus();
}

function DisplayProgress(statusMessage, progressMessage) {
    $("#divUpdateProgress").css("display", "inline");
    $("#lblStatus").html(statusMessage);
    if (progressMessage == undefined) {
        progressMessage = statusMessage;
    }
    $("#lblProgressText").html(progressMessage);
}

function GetAllOceanMasters() {
    ShowNotification("Loading data...", "- Collecting master details...");

    RRAW.WebServices.OceanRateRequests.GetAllMasters(AuthenticationToken(), onSuccessOfGetAllOceanMasters, onFailureOfGetAllOceanMasters);
}

function onFailureOfGetAllOceanMasters(res) {
    window.location = "Errors.aspx?Operation=GetAllOceanMasters&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfGetAllOceanMasters(res) {
    var masters = res;

    if (masters == undefined) {
        if (mastersJSONCollectionCount <= maxJSONCollectionCount) {
            mastersJSONCollectionCount++;
            GetAllOceanMasters();
            return;
        }
    }

    onSuccessOfGetAllOceanShipMethods(masters["GetAllOceanShipMethods"]);
    onSuccessOfGetAllRegions(masters["GetAllRegions"]);
    onSuccessOfGetAllRatesValidFor(masters["GetAllRatesValidFor"]);
    onSuccessOfGetAllRateBasedOn(masters["GetAllRateBasedOn"]);

    mastersLoadComplete = true;

    if (currentRateRequestId == undefined) {
        ShowNotification("Data loaded successfully.", "- Continue creating new rate request.", 5000);

        $("#btnSave").fadeIn();
        $("#btnPostNewRateRequest").fadeIn();
        $("#btnBackToDashboard").fadeIn();

        $("#divAddIcon").addClass("addIcon");

        //TestAssignments();

        AttachDatePickers();
    }
}

function AttachDatePickers() {
    $("#txtShipDate").datepicker({
        onSelect: function (dateText, inst) {
            $("#txtShipDate").focus();
        }
    });

    $("#txtRatesValidTill").datepicker({
        onSelect: function (dateText, inst) {
            $("#txtRatesValidTill").focus();
        }
    });
}

function TestAssignments() {
    $("#cmbWDShipMethod").val(1);
    $("#cmbOriginRegion").val(1);
    $("#cmbDestRegion").val(1);
    $("#cmbRatesValidFor").val("DTP");

    $("#txtShipDate").val("1/1/2011");
    $("#txtRatesValidTill").val("1/1/2011");

    $.each($("[id^='txtRateTitle_']"), function (key, item) {
        $("#cmbRateBasedOn_" + key).val(1);
        $("#txtPerCBM_" + key).val("1");
    });
}

function onSuccessOfGetAllOceanShipMethods(res) {
    if (Number(res) != NaN && (res == errCode || res == 0)) {
        DisplayError("Unknown error has occured. Please contact Administrator");
        return errCode;
    }

    var shipMethods = res;

    $("#cmbWDShipMethod").children().remove();

    $('#cmbWDShipMethod').append($("<option></option>").attr("value", "").text("Select"));
    $.each(shipMethods, function (key, val) {
        $('#cmbWDShipMethod').append($("<option></option>").attr("value", key).text(val));
    });
}

function onSuccessOfGetAllRegions(res) {
    if (Number(res) != NaN && (res == errCode || res == 0)) {
        DisplayError("Unknown error has occured. Please contact Administrator");
        return errCode;
    }

    var regions = res;

    $("#cmbOriginRegion").children().remove();
    $("#cmbDestRegion").children().remove();

    $('#cmbOriginRegion').append($("<option></option>").attr("value", "").text("Select"));
    $('#cmbDestRegion').append($("<option></option>").attr("value", "").text("Select"));
    $.each(regions, function (key, val) {
        $('#cmbOriginRegion').append($("<option></option>").attr("value", key).text(val));
        $('#cmbDestRegion').append($("<option></option>").attr("value", key).text(val));
    });
}

function onSuccessOfGetAllRatesValidFor(res) {
    if (Number(res) != NaN && (res == errCode || res == 0)) {
        DisplayError("Unknown error has occured. Please contact Administrator");
        return errCode;
    }

    var ratesValidFor = res;

    $("#cmbRatesValidFor").children().remove();

    $('#cmbRatesValidFor').append($("<option></option>").attr("value", "").text("Select"));

    $.each(ratesValidFor, function (key, val) {
        $('#cmbRatesValidFor').append($("<option></option>").attr("value", key).text(val));
    });
}

function onSuccessOfGetAllRateBasedOn(res) {
    if (Number(res) != NaN && (res == errCode || res == 0)) {
        DisplayError("Unknown error has occured. Please contact Administrator");
        return errCode;
    }

    ratesBasedOn = res;

    var id = 0;

    $.each($("[id^='cmbRateBasedOn_']"), function (itemKey, item) {
        id = $(item).prop("id").split("_")[1];

        $("#cmbRateBasedOn_" + id).children().remove();

        $("#cmbRateBasedOn_" + id).append($("<option></option>").attr("value", "").text("Select"));
        $.each(ratesBasedOn, function (key, val) {
            $("#cmbRateBasedOn_" + id).append($("<option></option>").attr("value", key).text(val));
            if (key == 6) {
                $("#cmbRateBasedOn_" + id + " option[value='6']").attr('selected', 'selected');
            }
        });
    });

    AddMoreCharges();
}

function HideAllOperations() {
    $("#btnSave").fadeOut();
    //$("#btnPostComment").fadeOut();
    $("#btnApprove").fadeOut();
    $("#btnRevoke").fadeOut();
    $("#btnPostNewRateRequest").fadeOut();
    $("#btnNeedToReviseRate").fadeOut();
    $("#btnBackToDashboard").fadeOut();
    $("#btnSendBackToReviseRate").fadeOut();
    $("#btnReject").fadeOut();
    $("#btnArchive").fadeOut();
    $("#btnRemoveAllComments").fadeOut();
    $("#btnApprovedAsPermanent").fadeOut();
    $("#btnSendBackToRequestor").fadeOut();
}

function GetRateRequest() {
    RRAW.WebServices.OceanRateRequests.GetRateRequest(AuthenticationToken(), String(currentRateRequestId), onSuccessOfGetRateRequest, onFailureOfGetRateRequest);
}

function onFailureOfGetRateRequest(res) {
    window.location = "Errors.aspx?Operation=GetRateRequest&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfGetRateRequest(res) {
    if (res != undefined) {
        rateRequestJSON = res;
    }
    if (rateRequestJSON == undefined) {
        if (rateRequestJSONCollectionCount <= maxJSONCollectionCount) {
            rateRequestJSONCollectionCount++;
            GetRateRequest();
            return;
        }
    }

    if (rateRequestJSON == undefined || rateRequestJSON["Error"] != undefined || rateRequestJSON["RateRequest"] == "Error" || rateRequestJSON["CurrentRateRequestGenerator"] == "Error") {
        ShowNotification("Collecting rate request failed", "- Please cofirm rate request id and reload the page or contact administrator.", 10000);
        return;
    }
    else {
        var currentRateRequest;

        isRateRequestUpdated = false;
        currentRateRequest = rateRequestJSON["RateRequest"];

        if (mastersLoadComplete == false) {
            var t = setTimeout("onSuccessOfGetRateRequest()", 1000);
        }

        LoadRateRequest(currentRateRequest);

        existingRates = rateRequestJSON["Rates"];
        LoadRates();

        if (currentUserType != "Admin") {
            DisableFields();
        }

        currentRateRequestHolders = rateRequestJSON["CurrentRateRequestHolders"];

        currentRateRequestGenerator = rateRequestJSON["CurrentRateRequestGenerator"];

        currentRateRequestApprover = rateRequestJSON["CurrentRateRequestApprover"];

        PrepareAttachments(rateRequestJSON["Attachments"]);

        var dbServerDate = new Date(rateRequestJSON["DBServerDate"]);
        var effectiveDate = new Date(currentRateRequest.EffectiveDate);

        $("#pnlAttachments").hide();
        $("#divAddMoreCharges").hide();

        if (currentRateRequestGenerator == currentUserId) {
            $("#btnArchive").fadeOut();
        }
        else {
            $("#btnArchive").fadeIn();
        }

        if (currentRateRequest.ApproverID == "") {

            $("#btnArchive").attr('value', 'Delete')

            if (isInArray(currentRateRequestHolders, currentUserId) == true) {
                $("#btnApprove").fadeIn();

                if (currentUserType == "Client") {
                    //$("#btnPostComment").fadeIn();
                    $("#btnReject").fadeIn();

                    $("#UploadFileIframe").attr("src", "UploadFilePage.aspx");
                    $("#pnlAttachments").show();
                }
                else {
                    //alert(currentUserId);
                    if (currentRateRequest.RequestorID != currentUserId) {
                        $("#btnSendBackToReviseRate").fadeIn();
                    }
                    $("#btnNeedToReviseRate").fadeIn();
                    if (currentUserId == 3) {
                        $("#btnApprovedAsPermanent").fadeIn();
                        $("#UploadFileIframe").attr("src", "UploadFilePage.aspx");
                        $("#pnlAttachments").show();
                    }
                }
            }
            else {
                //$("#btnPostComment").fadeIn();
                $("#btnBackToDashboard").fadeIn();
            }
        }
        else {
            $("#lblStatus").html("This lane was approved by '" + currentRateRequestApprover.Name + "' on " + currentRateRequest.ApprovalDate + " as effective from " + currentRateRequest.EffectiveDate + " to " + currentRateRequest.ExpiryDate + ".");
            $("#lblStatus").css("color", "#00f");

            if ((currentUserType == "Client") && ((effectiveDate - dbServerDate) > 0)) {
                $("#btnRevoke").fadeIn();
                //$("#btnPostComment").fadeIn();
            }
            else {
                $("#btnBackToDashboard").fadeIn();
            }
        }

        if (currentUserType == "Admin") {
            $("#btnBackToDashboard").hide();
            $("#btnSave").fadeIn();
            //$("#btnPostComment").fadeIn();
            if ((effectiveDate - dbServerDate) > 0) {
                $("#btnRevoke").fadeIn();
            }
            $("#btnArchive").fadeIn();
            $("#btnRemoveAllComments").fadeIn();

            for (var i = 0; i < currentRateRequestHolders.length; i++) {
                
                if (currentRateRequestHolders[i] == 3 || currentRateRequestHolders[i] == 11) {
                    $("#btnSendBackToRequestor").fadeIn();
                    break;
                }
                
            }
                //alert(currentRateRequestHolders.length);

            $("#UploadFileIframe").attr("src", "UploadFilePage.aspx");
            $("#pnlAttachments").show();

            $("#divAddIcon").addClass("addIcon");

            AttachDatePickers();
        }

        $("#groupPreviousComments").show();
        $("#divAdditionalInformation").show();

        GetPreviousComments();
    }
}

function GetPreviousComments() {
    RRAW.WebServices.OceanRateRequests.GetPreviousComments(AuthenticationToken(), String(currentRateRequestId).toString(), onSuccessOfGetPreviousComments, onFailureOfGetPreviousComments);
}

function onFailureOfGetPreviousComments(res) {
    window.location = "Errors.aspx?Operation=GetPreviousComments&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfGetPreviousComments(res) {
    var previousComments = res["PreviousComments"];

    if (previousComments == undefined) {
        if (previousCommentsJSONCollectionCount <= maxJSONCollectionCount) {
            previousCommentsJSONCollectionCount++;
            GetPreviousComments();
            return;
        }
    }


    $("#divPreviousComments").html("");

    if (previousComments == "") {
        $("#divPreviousComments").html("No previous comments available.");
    }
    else {
        $.each(previousComments, function (key, val) {
            $("#divPreviousComments").append("<strong>Commented by " + val.CommentedBy + " on " + val.CommentDate + "</strong><br/>&nbsp;&nbsp;" + val.Comment + "<br/>---------------------<br/>");
        });
    }

    $("#divPreviousComments").fadeIn();

    ShowNotification("Rate Request Loaded Successfully", "- Data loaded.", 5000);
}
/* Get Rate Request Over */


function isInArray(arr, expValue) {
    var res = false;

    $.each(arr, function (key, val) {
        if (val == Number(expValue)) {
            res = true;
        }
    });

    return res;
}

//function isInComplexArray(arr, expValue) {
//	var res = 0;

//	$.each(arr, function (key, val) {
//		if (key == Number(expValue)) {
//			res = arr[key];
//		}
//	});

//	return res;
//}

function isEmpty(obj) {
    for (var prop in obj) {
        if (obj.hasOwnProperty(prop))
            return false;
    }

    return true;
}

function PrepareAttachments(attachments) {
    $("#divCurrentAttachments").children().remove();

    if (isEmpty(attachments)) {
        $("#divCurrentAttachments").html("No attachment available.");
    }
    else {
        $.each(attachments, function (key, val) {
            $("#divCurrentAttachments").append("<a href='" + rateRequestAttachmentsServerPath + val[1] + "'>" + val[1] + "</a><br/>");
        });
    }
}

function LoadRateRequest(rateRequest) {
    $("#txtContainerNo").val(rateRequest.ContainerNo);
    $("#txtOceanHBL").val(rateRequest.OceanHBL);
    var ShipDate = GetDate(rateRequest.ShipDate) == "01/01/1900" ? "" : GetDate(rateRequest.ShipDate);
    $("#txtShipDate").val(ShipDate);
    $("#txtFreightTerm").val(rateRequest.FreightTerm);
    $("#cmbWDShipMethod option:contains(" + rateRequest.WDShipMethod + ")").attr('selected', 'selected');
    $("#txtCarrierName").val(rateRequest.CarrierName);
    $("#txtShipperName").val(rateRequest.ShipperName);
    $("#txtOriginCity").val(rateRequest.OriginCity);
    $("#txtOriginPort").val(rateRequest.OriginPort);
    $("#txtOriginZipcode").val(rateRequest.OriginZipcode);
    $("#cmbOriginRegion option:contains(" + rateRequest.OriginRegion + ")").attr('selected', 'selected');
    $("#txtConsigneeName").val(rateRequest.ConsigneeName);
    $("#txtDestCity").val(rateRequest.DestCity);
    $("#txtDestPort").val(rateRequest.DestPort);
    $("#txtDestZipcode").val(rateRequest.DestZipcode);
    $("#cmbDestRegion option:contains(" + rateRequest.DestRegion + ")").attr('selected', 'selected');
    $("#cmbRatesValidFor").val(rateRequest.RatesValidFor);
    var RatesValidTill = GetDate(rateRequest.RatesValidTill) == "01/01/1900" ? "" : GetDate(rateRequest.RatesValidTill);
    $("#txtRatesValidTill").val(RatesValidTill);
    $("#txtComment").val("");
}

//function ClearRateFields() {
//	$.each($("[id^='txtRateTitle_']"), function (key, item) {
//		if ($(item).text() == "") {
//			$(item).parent().parent().remove();
//		}
//	});
//}

function LoadRates() {
    //ClearRateFields();
    $("#tblOtherCharges").children().remove();
    AddMoreCharges();

    $.each(existingRates, function (rateKey, rateVal) {
        var isTitleAvailable = false;

        $.each($("[id^='txtRateTitle_']"), function (boxKey, boxItem) {
            if ($(boxItem).text().replace(":", "") == rateVal[0]) {
                $("#txtRateTitle_" + boxKey).attr("id", "txtRateTitle_" + rateKey);
                $("#cmbRateBasedOn_" + boxKey).attr("id", "cmbRateBasedOn_" + rateKey);
                $("#txtPerCBM_" + boxKey).attr("id", "txtPerCBM_" + rateKey);
                $("#txtPer20GP_" + boxKey).attr("id", "txtPer20GP_" + rateKey);
                $("#txtPer40GP_" + boxKey).attr("id", "txtPer40GP_" + rateKey);
                $("#txtPer40HC_" + boxKey).attr("id", "txtPer40HC_" + rateKey);

                $("#cmbRateBasedOn_" + rateKey + " option:contains(" + rateVal[1] + ")").attr('selected', 'selected');
                $("#txtPerCBM_" + rateKey).val(rateVal[2]);
                $("#txtPer20GP_" + rateKey).val(rateVal[3]);
                $("#txtPer40GP_" + rateKey).val(rateVal[4]);
                $("#txtPer40HC_" + rateKey).val(rateVal[5]);

                isTitleAvailable = true;
                return false;
            }
        });

        if (isTitleAvailable == false) {
            $("#txtRateTitle_" + maxRateBasedOnId).attr("id", "txtRateTitle_" + rateKey);
            $("#cmbRateBasedOn_" + maxRateBasedOnId).attr("id", "cmbRateBasedOn_" + rateKey);
            $("#txtPerCBM_" + maxRateBasedOnId).attr("id", "txtPerCBM_" + rateKey);
            $("#txtPer20GP_" + maxRateBasedOnId).attr("id", "txtPer20GP_" + rateKey);
            $("#txtPer40GP_" + maxRateBasedOnId).attr("id", "txtPer40GP_" + rateKey);
            $("#txtPer40HC_" + maxRateBasedOnId).attr("id", "txtPer40HC_" + rateKey);

            $("#txtRateTitle_" + rateKey).val(rateVal[0]);
            $("#cmbRateBasedOn_" + rateKey + " option:contains(" + rateVal[1] + ")").attr('selected', 'selected');
            $("#txtPerCBM_" + rateKey).val(rateVal[2]);
            $("#txtPer20GP_" + rateKey).val(rateVal[3]);
            $("#txtPer40GP_" + rateKey).val(rateVal[4]);
            $("#txtPer40HC_" + rateKey).val(rateVal[5]);

            AddMoreCharges();
        }
    });
}

//function GetRateRequestWithMasters(rateRequestID) {
//	RRAW.WebServices.OceanRateRequests.GetRateRequestWithMasters(AuthenticationToken(), String(rateRequestID).toString(), onSuccessOfGetRateRequestWithMasters);
//}

//function onSuccessOfGetRateRequestWithMasters(res) {
//	if (res["Masters"] == "Error" || res["RateRequest"] == "Error") {
//		ShowNotification("Collecting rate request failed", "- Please cofirm rate request id and reload the page or contact administrator.", 5000);
//		return;
//	}

//	onSuccessOfGetAllOceanMasters(res["Masters"]);
//	onSuccessOfGetRateRequest(res["RateRequest"]);
//}

/* Get Rate Request Over */


/* File Upload */
function CheckFileUploadProgress() {
    fileUploadChecked++;

    if (fileUploadChecked > maxFileUploadChecks) {
        fileUploadComplete = true;
        fileUploadError = true;
        $(callbackObject).click();

        return;
    }

    var res;

    try {
        //Tested with IE6, IE7, IE8, Chrome12 & FF5
        //res = $("#UploadFileIframe").contents().find("PRE").html();
        //res = res.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&quot;/g, "\"").replace(/&gt/g, ">").replace("<pre>", "").replace("</pre>", "");
        //res = $.parseJSON(res);

        res = $("#UploadFileIframe").contents().find("PRE").html().replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&quot;/g, "\"").replace(/&gt/g, ">").replace(/\\/g, "\\\\")
        if (res.indexOf("<pre>") >= 0) {
            res = res.substr(res.indexOf("<pre>") + 5, res.indexOf("</pre>") - 5);
        }
        res = eval(res);
        if (res == null) {
            var t = setTimeout("CheckFileUploadProgress()", 2000);

            return;
        }
        else {
            uploadedFiles = res;
            //$("#UploadFileIframe").contents().children().remove();
            $("#UploadFileIframe").hide();
        }
    }
    catch (e) {
        //alert("Error callback");
        var t = setTimeout("CheckFileUploadProgress()", 2000);

        return;
    }
    fileUploadComplete = true;
    $(callbackObject).click();
}


function UploadFiles() {
    if (fileUploadComplete == false) {
        $("#UploadFileIframe").contents().find("#btnUpload").click();

        var t = setTimeout("CheckFileUploadProgress()", 1000);

        return false;
    }

    if (fileUploadError == true) {
        alert("Error Occured. Please try again.");

        return false;
    }
}
/* File Upload over*/


function AddRateValidations() {
    return;

    var id = 0;

    $.each($("[id^='txtRateTitle_']"), function (key, item) {
        id = $(item).prop("id").split("_")[1];

        if ($(item).val() == "" && $(item).html() == "") {
            $(item).removeClass("validateRequired");
            $("#cmbRateBasedOn_" + id).removeClass("validateRequired");

            if (($("#cmbRateBasedOn_" + id).val() != "") || ($("#txtPerCBM_" + id).val() != "") || ($("#txtPer20GP_" + id).val() != "") || ($("#txtPer40GP_" + id).val() != "") || ($("#txtPer40HC_" + id).val() != "")) {
                $(item).addClass("validateRequired");
            }
            else {
                $(item).removeClass("validateRequired");
            }
        }
        else {
            $("#cmbRateBasedOn_" + id).addClass("validateRequired");

            if (($("#txtPerCBM_" + id).val() == "") && ($("#txtPer20GP_" + id).val() == "") && ($("#txtPer40GP_" + id).val() == "") && ($("#txtPer40HC_" + id).val() == "")) {
                $("#txtPerCBM_" + id).addClass("validateRequired");
            }
            else {
                $("#txtPerCBM_" + id).removeClass("validateRequired");
            }
        }
    });

    //Origin
    if ($("#txtOriginCity").val() == "" && $("#txtOriginPort").val() == "" && $("#txtOriginZipcode").val() == "" & $("#cmbOriginRegion").val() == "") {
        //$("#txtOriginCity").addClass("validateRequired");
    }
    else {
        $("#txtOriginCity").removeClass("validateRequired");
    }

    //Destination
    if ($("#txtDestCity").val() == "" && $("#txtDestPort").val() == "" && $("#txtDestZipcode").val() == "" & $("#cmbDestRegion").val() == "") {
        // $("#txtDestCity").addClass("validateRequired");
    }
    else {
        $("#txtDestCity").removeClass("validateRequired");
    }
}

function CollectRates() {
    var rates = new Array();
    var id = 0;

    $.each($("[id^='txtRateTitle_']"), function (key, item) {
        var arrIndex = Number(0);

        id = Number($(item).prop("id").split("_")[1]);

        if (id >= maxRateBasedOnId) {
            arrIndex = Number($(rates).length);
        }
        else {
            arrIndex = id;
        }

        if (($("#txtRateTitle_" + id).val().length > 0) || ($("#cmbRateBasedOn_" + id).val().length > 0) || ($("#txtPerCBM_" + id).val().length > 0) || ($("#txtPer20GP_" + id).val().length > 0) || ($("#txtPer40GP_" + id).val().length > 0) || ($("#txtPer40HC_" + id).val().length > 0)) {
            rates[arrIndex] = new Array();

            if ($(item).text() != "") {
                rates[arrIndex][0] = $(item).text().replace(":", "");
            }
            else {
                rates[arrIndex][0] = $(item).val();
            }

            rates[arrIndex][1] = $("#cmbRateBasedOn_" + id + " option:selected").text();

            rates[arrIndex][2] = $("#txtPerCBM_" + id).val();

            rates[arrIndex][3] = $("#txtPer20GP_" + id).val();

            rates[arrIndex][4] = $("#txtPer40GP_" + id).val();

            rates[arrIndex][5] = $("#txtPer40HC_" + id).val();
        }
    });

    return rates;
}

$("#btnPostNewRateRequest").click(function () {
    AddRateValidations();

    if (isFormValid(true) == false) return;

    ShowNotification("Posting New Rate Request", "- Saving data...<br/>- Sending mail to your approver...");

    //return;

    HideAllOperations();
    DisableFields();

    callbackObject = this;
    if (UploadFiles() == false) return;

    var ShipDate = $("#txtShipDate").val() == "12:00:00 AM" ? "" : $("#txtShipDate").val();
    var RatesValidTill = $("#txtRatesValidTill").val() == "12:00:00 AM" ? "" : $("#txtRatesValidTill").val();

    RRAW.WebServices.OceanRateRequests.PostNewRateRequest(AuthenticationToken(), currentUserId, $("#txtContainerNo").val(), $("#txtOceanHBL").val(), ShipDate, $("#txtFreightTerm").val(), $("#cmbWDShipMethod option:selected").text(), $("#txtCarrierName").val(), $("#txtShipperName").val(), $("#txtOriginCity").val(), $("#txtOriginPort").val(), $("#txtOriginZipcode").val(), $("#cmbOriginRegion option:selected").text(), $("#txtConsigneeName").val(), $("#txtDestCity").val(), $("#txtDestPort").val(), $("#txtDestZipcode").val(), $("#cmbDestRegion option:selected").text(), $("#cmbRatesValidFor option:selected").val(), ShipDate, $("#txtComment").val(), NewRates(), uploadedFiles, onSuccessOfPostNewOceanRateRequest, onFailureOfPostNewRateRequest);
});

function onFailureOfPostNewRateRequest(res) {
    window.location = "Errors.aspx?Operation=PostNewRateRequest&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfPostNewOceanRateRequest(res) {
    if (CheckPostCallStatus(res) == false) return errCode;

    currentRateRequestId = res;

    ShowNotification("Rate Request Posted Successfully", "- Email has been sent out to your approver.<br />- You will be notified by mail once your request is being reviewed by client.", 5000);

    GetRateRequest(currentRateRequestId);
}

function NewRates() {
    if (existingRates == undefined) {
        return CollectRates();
    }
    else {
        var newRates = new Array();
        var i = 0;

        if (collectedRates == undefined) {
            collectedRates = CollectRates();
        }

        $.each(collectedRates, function (key, val) {
            if (val != undefined) {
                if (existingRates[key] == undefined) {
                    newRates[i] = val;
                    i++;
                }
            }
        });
    }

    return newRates;
}

function UpdatedRates() {
    var updatedRates = new Array();
    var i = 0;

    if (collectedRates == undefined) {
        collectedRates = CollectRates();
    }

    $.each(collectedRates, function (key, val) {
        if (val != undefined) {
            var currentExistingRate = existingRates[key];
            if (currentExistingRate != undefined) {
                if ((val[0] != currentExistingRate[0]) || (val[1] != currentExistingRate[1]) || (val[2] != currentExistingRate[2]) || (val[3] != currentExistingRate[3]) || (val[4] != currentExistingRate[4]) || (val[5] != currentExistingRate[5])) {
                    updatedRates[i] = new Array();

                    updatedRates[i][0] = key;
                    updatedRates[i][1] = val[0];
                    updatedRates[i][2] = val[1];
                    updatedRates[i][3] = val[2];
                    updatedRates[i][4] = val[3];
                    updatedRates[i][5] = val[4];
                    updatedRates[i][6] = val[5];

                    i++;
                }
            }
        }
    });

    return updatedRates;
}

function RemovedRates() {
    var removedRates = new Array();

    if (collectedRates == undefined) {
        collectedRates = CollectRates();
    }

    $.each(existingRates, function (key, val) {
        if (val != undefined) {
            if (collectedRates[key] == undefined) {
                removedRates.push(key);
            }
        }
    });

    return removedRates;
}

$("#btnSave").click(function () {
    AddRateValidations();

    if (isFormValid(true) == false) return;

    ShowNotification("Saving Rate Request", "- Saving data...");

    HideAllOperations();
    DisableFields();

    callbackObject = this;
    if (UploadFiles() == false) return;

    if (currentRateRequestId == undefined) {
        RRAW.WebServices.OceanRateRequests.SaveNewRateRequest(AuthenticationToken(), currentUserId, $("#txtContainerNo").val(), $("#txtOceanHBL").val(), $("#txtShipDate").val(), $("#txtFreightTerm").val(), $("#cmbWDShipMethod option:selected").text(), $("#txtCarrierName").val(), $("#txtShipperName").val(), $("#txtOriginCity").val(), $("#txtOriginPort").val(), $("#txtOriginZipcode").val(), $("#cmbOriginRegion option:selected").text(), $("#txtConsigneeName").val(), $("#txtDestCity").val(), $("#txtDestPort").val(), $("#txtDestZipcode").val(), $("#cmbDestRegion option:selected").text(), $("#cmbRatesValidFor option:selected").val(), $("#txtRatesValidTill").val(), $("#txtComment").val(), NewRates(), uploadedFiles, onSuccessOfSaveRateRequest, onFailureOfSaveRateRequest);
    }
    else {
        RRAW.WebServices.OceanRateRequests.SaveExistingRateRequest(AuthenticationToken(), String(currentRateRequestId).toString(), currentUserId, $("#txtContainerNo").val(), $("#txtOceanHBL").val(), $("#txtShipDate").val(), $("#txtFreightTerm").val(), $("#cmbWDShipMethod option:selected").text(), $("#txtCarrierName").val(), $("#txtShipperName").val(), $("#txtOriginCity").val(), $("#txtOriginPort").val(), $("#txtOriginZipcode").val(), $("#cmbOriginRegion option:selected").text(), $("#txtConsigneeName").val(), $("#txtDestCity").val(), $("#txtDestPort").val(), $("#txtDestZipcode").val(), $("#cmbDestRegion option:selected").text(), $("#cmbRatesValidFor option:selected").val(), $("#txtRatesValidTill").val(), $("#txtComment").val(), NewRates(), UpdatedRates(), RemovedRates(), uploadedFiles, onSuccessOfSaveRateRequest, onFailureOfSaveRateRequest);
    }
});

function onFailureOfSaveRateRequest(res) {
    window.location = "Errors.aspx?Operation=SaveExistingRateRequest&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfSaveRateRequest(res) {
    if (CheckPostCallStatus(res) == false) return errCode;

    currentRateRequestId = res;

    ShowNotification("Rate Request Saved Successfully", "- You can review your rate request under Open To Me in Dashboard.", 5000);

    GetRateRequest(currentRateRequestId);
}

$("#btnApprove").click(function () {
    if (currentUserType == "Client") {
        ShowNotification("Uploading Documents", "- Uploading attachments...");

        callbackObject = this;
        if (UploadFiles() == false) return;

        ShowNotification("Approving Rate Request", "- Saving data...<br/>- Sending mail to related users...");

        RRAW.WebServices.OceanRateRequests.ApproveRateRequestByClient(AuthenticationToken(), String(currentRateRequestId), currentUserId, $("#txtComment").val(), uploadedFiles, onSuccessOfApproveRateRequest);

        HideAllOperations();
    }
    else {
        if (isRateRequestUpdated == false) {
            ShowNotification("Approving Rate Request", "- Saving data...<br/>- Sending mail to your approver...");

            RRAW.WebServices.OceanRateRequests.ApproveRateRequestWithoutChange(AuthenticationToken(), String(currentRateRequestId), currentUserId, $("#txtComment").val(), onSuccessOfApproveRateRequest, onFailureOfApproveRateRequest);

            HideAllOperations();
        }
        else {
            AddRateValidations();

            if (isFormValid(true) == false) return;

            HideAllOperations();

            ShowNotification("Uploading Documents", "- Uploading attachments...");

            callbackObject = this;
            if (UploadFiles() == false) return;

            ShowNotification("Approving Rate Request", "- Saving data...<br/>- Sending mail to your approver...");

            RRAW.WebServices.OceanRateRequests.ApproveRateRequest(AuthenticationToken(), String(currentRateRequestId), currentUserId, $("#txtContainerNo").val(), $("#txtOceanHBL").val(), $("#txtShipDate").val(), $("#txtFreightTerm").val(), $("#cmbWDShipMethod option:selected").text(), $("#txtCarrierName").val(), $("#txtShipperName").val(), $("#txtOriginCity").val(), $("#txtOriginPort").val(), $("#txtOriginZipcode").val(), $("#cmbOriginRegion option:selected").text(), $("#txtConsigneeName").val(), $("#txtDestCity").val(), $("#txtDestPort").val(), $("#txtDestZipcode").val(), $("#cmbDestRegion option:selected").text(), $("#cmbRatesValidFor option:selected").val(), $("#txtRatesValidTill").val(), $("#txtComment").val(), NewRates(), UpdatedRates(), RemovedRates(), uploadedFiles, onSuccessOfApproveRateRequest, onFailureOfApproveRateRequest);
        }
    }
});

function onFailureOfApproveRateRequest(res) {
    window.location = "Errors.aspx?Operation=ApproveRateRequest&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfApproveRateRequest(res) {
    if (CheckPostCallStatus(res) == false) return errCode;

    ShowNotification("Rate Request Approved Successfully", "- You can review your rate request under Open For Others in Dashboard.", 5000);

    GetRateRequest(currentRateRequestId);
}

function onSuccessOfApproveRateRequest_Parmanent(res) {
    if (CheckPostCallStatus(res) == false) return errCode;

    ShowNotification("Rate Request Approved Successfully", "- You can review your rate request under Approved in Dashboard.", 5000);

    window.location = "Dashboard.aspx";
    //GetRateRequest(currentRateRequestId);
}

$("#btnApprovedAsPermanent").click(function () {
    if (currentUserId == 3) {
        ShowNotification("Uploading Documents", "- Uploading attachments...");

        callbackObject = this;
        if (UploadFiles() == false) return;

        ShowNotification("Approving Rate Request", "- Saving data...<br/>- Sending mail to related users...");

        RRAW.WebServices.OceanRateRequests.ApproveRateRequestByClient(AuthenticationToken(), String(currentRateRequestId), currentUserId, $("#txtComment").val(), uploadedFiles, onSuccessOfApproveRateRequest_Parmanent);

        HideAllOperations();
    }
});

$("#btnSendBackToRequestor").click(function () {
    ShowNotification("Reverting Rate Request", "- Saving data...<br/>- Sending mail to related users...");

    RRAW.WebServices.OceanRateRequests.SendRateRequestBackToOriginator(AuthenticationToken(), String(currentRateRequestId), currentUserId,'O', onSuccessOfSendBackToRequestor);

    HideAllOperations();
});

function onSuccessOfSendBackToRequestor(res) {
    if (CheckPostCallStatus(res) == false) return errCode;

    ShowNotification("Rate Request reverted back Successfully", "- You can review your rate request under Open For Others in Dashboard.", 5000);

    window.location = "Dashboard.aspx";
}

//$("#btnPostComment").click(function () {
//	if ($("#txtComment").val() != "") {
//		ShowNotification("Posting Your Comment", "- Saving data...<br/>- Sending mail to your approver...");

//		RRAW.WebServices.OceanRateRequests.PostNewComment(AuthenticationToken(), String(currentRateRequestId), currentUserId, $("#txtComment").val(), onSuccessOfPostNewComment, onFailureOfPostNewComment);

//		HideAllOperations();
//	}
//	else {
//		$("#txtComment").focus();
//		ShowNotification("Validation Failed", "- Please fill up comment box to post comment.", 5000);
//	}
//});

function onFailureOfPostNewComment(res) {
    window.location = "Errors.aspx?Operation=PostNewComment&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfPostNewComment(res) {
    if (CheckPostCallStatus(res) == false) return errCode;

    ShowNotification("Comment Posted Successfully", "- .", 5000);

    //replace this by having an independent call GetPreviousComments()
    GetRateRequest(currentRateRequestId);
}


$("#btnSendBackToReviseRate").click(function () {
    if (isRateRequestUpdated == false) {
        ShowNotification("Sending Rate Request back to revise", "- Saving data...<br/>- Sending mail to your approver...");

        RRAW.WebServices.OceanRateRequests.SendRateRequestBackToReviseWithoutChange(AuthenticationToken(), String(currentRateRequestId), currentUserId, $("#txtComment").val(), onSuccessOfSendRateRequestBackToRevise, onFailureOfSendRateRequestBackToRevise);

        HideAllOperations();
    }
    else {
        AddRateValidations();

        if (isFormValid(true) == false) return;

        ShowNotification("Sending Rate Request back to revise", "- Saving data...<br/>- Sending mail to your approver...");

        HideAllOperations();

        callbackObject = this;
        if (UploadFiles() == false) return;

        RRAW.WebServices.OceanRateRequests.SendRateRequestBackToRevise(AuthenticationToken(), String(currentRateRequestId), currentUserId, $("#txtContainerNo").val(), $("#txtOceanHBL").val(), $("#txtShipDate").val(), $("#txtFreightTerm").val(), $("#cmbWDShipMethod option:selected").text(), $("#txtCarrierName").val(), $("#txtShipperName").val(), $("#txtOriginCity").val(), $("#txtOriginPort").val(), $("#txtOriginZipcode").val(), $("#cmbOriginRegion option:selected").text(), $("#txtConsigneeName").val(), $("#txtDestCity").val(), $("#txtDestPort").val(), $("#txtDestZipcode").val(), $("#cmbDestRegion option:selected").text(), $("#cmbRatesValidFor option:selected").val(), $("#txtRatesValidTill").val(), $("#txtComment").val(), NewRates(), UpdatedRates(), RemovedRates(), uploadedFiles, onSuccessOfSendRateRequestBackToRevise, onFailureOfSendRateRequestBackToRevise);
    }
});

function onFailureOfSendRateRequestBackToRevise(res) {
    window.location = "Errors.aspx?Operation=SendRateRequestBackToRevise&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfSendRateRequestBackToRevise(res) {
    if (CheckPostCallStatus(res) == false) return errCode;

    ShowNotification("Rate Request Sent Back To Revise Successfully", "- You can review your rate request under Open For Others in Dashboard.", 5000);

    GetRateRequest(currentRateRequestId);
}

$("#btnNeedToReviseRate").click(function () {
    $("#PanelNewRateRequest").scrollTop(0);

    EnableFields();

    isRateRequestUpdated = true;

    $("#ContainerNo").focus();
    $("#btnNeedToReviseRate").hide();
    $("#btnSave").show();
    $("#UploadFileIframe").attr("src", "UploadFilePage.aspx");
    $("#UploadFileIframe").show();
    $("#pnlAttachments").show();
    $("#divAddIcon").addClass("addIcon");

    AttachDatePickers();
});

$("#btnRevoke").click(function () {
    ShowNotification("Revoking Rate Request", "- Setting attributes...<br/>- Sending mail to related persons...");

    HideAllOperations();

    RRAW.WebServices.OceanRateRequests.RevokeRateRequest(AuthenticationToken(), String(currentRateRequestId), currentUserId, $("#txtComment").val(), onSuccessOfRevokeRateRequest, onFailureOfRevokeRateRequest);
});

function onFailureOfRevokeRateRequest(res) {
    window.location = "Errors.aspx?Operation=RevokeRateRequest&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfRevokeRateRequest(res) {
    if (CheckPostCallStatus(res) == false) return errCode;

    ShowNotification("Rate Request Revoked Successfully", "- You can now Approve or Reject rate request again.", 5000);

    GetRateRequest(currentRateRequestId);
}

$("#btnReject").click(function () {
    ShowNotification("Rejecting Rate Request", "- Uploading attachments...");

    callbackObject = this;
    if (UploadFiles() == false) return;

    ShowNotification("Rejecting Rate Request", "- Setting attributes...<br/>- Sending mail to related persons...");

    HideAllOperations();

    RRAW.WebServices.OceanRateRequests.RejectRateRequest(AuthenticationToken(), String(currentRateRequestId), currentUserId, $("#txtComment").val(), uploadedFiles, onSuccessOfRejectRateRequest, onFailureOfRejectRateRequest);
});

function onFailureOfRejectRateRequest(res) {
    window.location = "Errors.aspx?Operation=RejectRateRequest&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfRejectRateRequest(res) {
    if (CheckPostCallStatus(res) == false) return errCode;

    ShowNotification("Rate Request Rejected Successfully", "- You will be notified by mail once your subordinate operates.", 5000);

    GetRateRequest(currentRateRequestId);
}

$("#btnRemoveAllComments").click(function () {
    if (confirm("Are you sure you want to remove all comments?") == true) {
        ShowNotification("Removing Comments", "- Sending mail to related persons...");

        HideAllOperations();

        RRAW.WebServices.OceanRateRequests.RemoveAllComments(AuthenticationToken(), String(currentRateRequestId), currentUserId, $("#txtComment").val(), onSuccessOfRemoveAllComments, onFailureOfRemoveAllComments);
    }
    else {
        return false;
    }
});

function onFailureOfRemoveAllComments(res) {
    window.location = "Errors.aspx?Operation=RemoveAllComments&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfRemoveAllComments(res) {
    if (CheckPostCallStatus(res) == false) return errCode;

    ShowNotification("Comments Removed Successfully", "- Mail has been sent out to all related persons.", 5000);

    GetRateRequest(currentRateRequestId);
}

$("#btnArchive").click(function () {
    if (trim(document.getElementById("txtComment").value) == "") {
        alert("Please add reason in Comment box to delete this Rate Request");
        document.getElementById("txtComment").focus();
        return false;
    }
    if (confirm("Are you sure you want to delete/archive this rate request?") == true) {
        ShowNotification("Archiving Rate Request", "- Setting attributes...<br/>- Sending mail to related persons...");

        HideAllOperations();

        RRAW.WebServices.OceanRateRequests.ArchiveRateRequest(AuthenticationToken(), String(currentRateRequestId), currentUserId, $("#txtComment").val(), onSuccessOfArchiveRateRequest, onFailureOfArchiveRateRequest);
    }
    else {
        return false;
    }
});

function onFailureOfArchiveRateRequest(res) {
    window.location = "Errors.aspx?Operation=ArchiveRateRequest&ExceptionType=" + res._exceptionType + "&Msg=" + res._message + "&StackTrace=" + res._stackTrace + "&TimedOut=" + res._timedOut;
}

function onSuccessOfArchiveRateRequest(res) {
    if (CheckPostCallStatus(res) == false) return errCode;

    ShowNotification("Rate Request Archived Successfully", "- No one will be able to work on this rate request in system from now onwards.", 5000);

    window.location = 'Dashboard.aspx';
    //GetRateRequest(currentRateRequestId);
}

$("#btnBackToDashboard").click(function () {
    window.location = 'Dashboard.aspx';
    //locate('dashboardlink');
});

function ProgressComplete() {
    $("#divUpdateProgress").style.display = "none";
    $("#lblStatus").html("New rate request posted/saved successfully...");
}

function lookupForFile(controlNumber) {
    $("#fUpload_" + controlNumber)[0].click();
}

function attachFile(controlNumber) {
    if (!document.all) {
        var l = $("#fUpload_" + controlNumber).files.length;
        if (l > 0) {
            $("#linkAttachFile_" + controlNumber).html($("#fUpload_" + controlNumber).files[0].name + " (" + Math.round(($("#fUpload_" + controlNumber).files[0].size / 1024)) + "KB)");
            $("#chkAttachment_" + controlNumber).show();
            $("#chkAttachment_" + controlNumber).prop("checked", true);
            $("#divAttachment_" + (controlNumber + 1)).show();
        }
    }
}

function AddMoreCharges() {
    if ($("#txtRateTitle_" + maxRateBasedOnId).attr("disabled") == "disabled") return;

    maxRateBasedOnId++;
    var contentsToAppend = "<tr id='rowRates_" + maxRateBasedOnId + "'style='display:none'><td style='width: 262px'><input type='text' id='txtRateTitle_" + maxRateBasedOnId + "' style='width:97%; text-align:left'/></td><td><select id='cmbRateBasedOn_" + maxRateBasedOnId + "'>";

    var options = "<option value=''>Select</option>";
    $.each(ratesBasedOn, function (key, val) {
        options += "<option value='" + key + "'>" + val + "</option>";
    });

    contentsToAppend += options;

    contentsToAppend += "</select></td><td><input type='text' id='txtPerCBM_" + maxRateBasedOnId + "'/></td><td><input type='text' id='txtPer20GP_" + maxRateBasedOnId + "'/></td><td><input type='text' id='txtPer40GP_" + maxRateBasedOnId + "'/></td><td><input type='text' id='txtPer40HC_" + maxRateBasedOnId + "' style='width:61px'/></td>";

    if ($("#tblOtherCharges").children().children().length > 0) {
        contentsToAppend += "<td><div id='btnRemoveRateRow_" + maxRateBasedOnId + "' style='cursor:pointer' class='deleteIcon'></div></td></tr>";

        $("#tblOtherCharges").append(contentsToAppend);
        $("#rowRates_" + maxRateBasedOnId).fadeIn(function () {
            $("#txtRateTitle_" + maxRateBasedOnId).focus();
        });
    }
    else {
        contentsToAppend += "<td><div id='btnEraseRateRow_" + maxRateBasedOnId + "' style='cursor:pointer' class='eraseIcon'></div></td></tr>";
        $("#tblOtherCharges").append(contentsToAppend);
        $("#rowRates_" + maxRateBasedOnId).fadeIn();
    }
}

$("#divAddMoreCharges").click(function () {
    RateRowOperations(("#txtRateTitle_" + maxRateBasedOnId));

    AddMoreCharges();

    $("#divAddMoreCharges").fadeOut();

    moveDivToBottom("PanelNewRateRequest", 110);
});

$("#[id^='btnEraseRateRow_']").live("click", function () {
    var id = $(this).prop("id").split("_")[1];

    $("#rowRates_" + id).fadeOut("fast", function () {
        $("#txtRateTitle_" + (maxRateBasedOnIdValue + 1)).val("");
        $("#cmbRateBasedOn_" + (maxRateBasedOnIdValue + 1)).val("");
        $("#txtPerCBM_" + (maxRateBasedOnIdValue + 1)).val("");
        $("#txtPer20GP_" + (maxRateBasedOnIdValue + 1)).val("");
        $("#txtPer40GP_" + (maxRateBasedOnIdValue + 1)).val("");
        $("#txtPer40HC_" + (maxRateBasedOnIdValue + 1)).val("");

        $("#rowRates_" + id).fadeIn("fast");
    });
});

$("#[id^='btnRemoveRateRow_']").live("click", function () {
    RemoveRateRow(this);
});

function RemoveRateRow(eventControl) {
    var id = ($(eventControl).prop("id")).split("_")[1];

    $("#rowRates_" + id).fadeOut("fast", function () {
        $("#rowRates_" + id).remove();
    });
}

function moveDivToBottom(divId, minValue) {
    var objDiv = document.getElementById(divId);
    if (objDiv.scrollTop < (minValue + (objDiv.scrollHeight - 992))) {
        objDiv.scrollTop = minValue + (objDiv.scrollHeight - 992);
    }
}

// General functions -- Can be moved to a general js file --
function AuthenticationToken() {
    return GetCookie("AuthenticationToken");
}

function GetCookie(c_name) {
    var i, x, y, ARRcookies = document.cookie.split(";");
    for (i = 0; i < ARRcookies.length; i++) {
        x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
        y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
        x = x.replace(/^\s+|\s+$/g, "");
        if (x == c_name) {
            return unescape(y);
        }
    }
}

function RefineTextBoxStringValue(textBoxInstance) {
    var val = $(textBoxInstance).val();

    val = $.trim($(textBoxInstance).val());

    $(textBoxInstance).val(val);
}

function IsBlankString(textBoxControl) {
    if ($(textBoxControl).val() == "" || $(textBoxControl).val() == undefined) {
        $(textBoxControl).focus();
        return true;
    }
    else {
        return false;
    }
}

function IsBlankNumber(textBoxControl) {
    if ($(textBoxControl).val() == 0) {
        $(textBoxControl).focus();
        return true;
    }
    else {
        return false;
    }
}

function IsBlankCombo(comboBoxControl) {
    if ($("#" + $(comboBoxControl).prop("id") + " option:selected").val() == 0) {
        $(comboBoxControl).focus();
        return true;
    }
    else {
        return false;
    }
}

function IsInvalidNumber(textBoxControl) {
    if (isNaN($(textBoxControl).val())) {
        $(textBoxControl).focus();
        return true;
    }
    else {
        return false;
    }
}

//function IsInvalidDate(textBoxControl) {
//	var dtVal = $(textBoxControl).val();

//	var dtArr = dtVal.split("/");

//	if (dtArr[0] >= 1 && dtArr[0] <= 12) {
//		if (dtArr[1] >= 1 && dtArr[1] <= 31) {
//			if (dtArr[0] > 0 && dtArr[0] <= 12) {
//				return false;
//			}
//		}
//	}

//	$(textBoxControl).focus();
//	return true;
//}

function DisplayError(errorMessage, control) {
    if (control != undefined) {
        $(control).focus();
    }

    alert(errorMessage);

    return 1;
}

function GetCurrentDate() {
    var t = new Date();
    return ((t.getMonth() + 1) + '/' + t.getDate() + '/' + t.getFullYear() + ' ' + t.getHours() + ':' + t.getMinutes() + ':' + t.getSeconds());
}

function GetDate(dt) {
    dt = new Date(dt);
    var m = dt.getMonth() + 1;
    var d = dt.getDate();
    var y = dt.getFullYear();

    return (((m < 10) ? ("0" + m) : m) + '/' + ((d < 10) ? ("0" + d) : d) + '/' + y);
}

function ShowNotification(title, description, fadeOutAfter) {
    $("#divNotificationTitle").html(title);
    $("#divNotificationDescription").html(description);
    $("#divNotification").css("top", "154px");
    if ($("#divNotification").css("display") == "none") {
        $("#divNotification").fadeIn();
    }
    if (fadeOutAfter != undefined) {
        var t = setTimeout("$('#divNotification').fadeOut()", fadeOutAfter);
    }
}

function CheckPostCallStatus(res) {
    if (Number(res) != NaN && (res == errCode || res == 0)) {
        DisplayError("Unknown error has occured. Please contact Administrator");
        return false;
    }
}

function GetQueryString(key) {
    var re = new RegExp('(?:\\?|&)' + key + '=(.*?)(?=&|$)', 'gi');
    var r = [], m;
    while ((m = re.exec(document.location.search)) != null) r[r.length] = m[1];
    if (r.length > 0) {
        return r;
    }
    else {
        return undefined;
    }
}
// General functions over

//Take care of clicking appropriate button
//$("input[type='text']").keypress(function (e) {
//	if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {
//		$("#btnPostNewRateRequest").click();
//		return true;
//	}
//});

$("#[id^='txtPer40HC_']").live("keydown", function (e) {
    var code = (e.keyCode ? e.keyCode : e.which);

    if (code == 9) { // 9 is for TAB Key
        var id = (this.id).split("_")[1];

        if (($("#txtRateTitle_" + id).val().length > 0) || ($("#cmbRateBasedOn_" + id).val().length > 0) || ($("#txtPerCBM_" + id).val().length > 0) || ($("#txtPer20GP_" + id).val().length > 0) || ($("#txtPer40GP_" + id).val().length > 0) || ($("#txtPer40HC_" + id).val().length > 0)) {

            if ($("#txtRateTitle_" + (Number(id) + 1)).prop("id") == undefined) {
                AddMoreCharges();
            }
        }
    }
});

$("input[type='text']").live("blur", function (e) {
    this.value = this.value.toUpperCase();
});

$("#[id^='txtRateTitle_']").live("keyup", function (e) {
    RateRowOperations(this);
});

$("#[id^='cmbRateBasedOn_']").live("keyup", function (e) {
    RateRowOperations(this);
});

$("#[id^='txtPerCBM_']").live("keyup", function (e) {
    RateRowOperations(this);
});

$("#[id^='txtPer20GP_']").live("keyup", function (e) {
    RateRowOperations(this);
});

$("#[id^='txtPer40GP_']").live("keyup", function (e) {
    RateRowOperations(this);
});

$("#[id^='txtPer40HC_']").live("keyup", function (e) {
    RateRowOperations(this);
});

function RateRowOperations(eventControl) {
    var id = ($(eventControl).prop("id")).split("_")[1];

    if (($("#txtRateTitle_" + (Number(id) + 1)).prop("id") == undefined) && (($("#txtRateTitle_" + id).val().length > 0) || ($("#cmbRateBasedOn_" + id).val().length > 0) || ($("#txtPerCBM_" + id).val().length > 0) || ($("#txtPer20GP_" + id).val().length > 0) || ($("#txtPer40GP_" + id).val().length > 0) || ($("#txtPer40HC_" + id).val().length > 0))) {
        $("#divAddMoreCharges").fadeIn();
    }
    else {
        $("#divAddMoreCharges").fadeOut();
    }

    QueryToRemoveRateRow(eventControl);
}

function QueryToRemoveRateRow(eventControl) {
    var currentId = ($(eventControl).prop("id")).split("_")[1];

    $.each($("[id^='txtRateTitle_']"), function (id, item) {
        var id = ($(item).prop("id")).split("_")[1];

        if ((id != currentId) && (id != (maxRateBasedOnIdValue + 1)) && (id != maxRateBasedOnId) && ($("#txtRateTitle_" + id).html().length == 0) && ($("#txtRateTitle_" + id).val().length == 0) && ($("#cmbRateBasedOn_" + id).val().length == 0) && ($("#txtPerCBM_" + id).val().length == 0) && ($("#txtPer20GP_" + id).val().length == 0) && ($("#txtPer40GP_" + id).val().length == 0) && ($("#txtPer40HC_" + id).val().length == 0)) {
            RemoveRateRow(item);
        }
    });
}

function trim(data) {
    if (data.length > 0) {
        return data.replace(/^\s*|\s*$/g, '');
    } else {
        return "";
    }
}