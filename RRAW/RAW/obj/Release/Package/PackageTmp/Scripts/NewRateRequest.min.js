/// <reference path="http://ajax.googleapis.com/ajax/libs/$/1.6.1/$.min.js" />

//File Upload supporters
var filesInProgress = 0;
var buttonPressed = false;
var ieCheckDone = false;
var processing = false;
var callbackObject;
var uploadedFiles = new Array();


$(document).ready(function () {
    onBodyLoad();

    if ($.browser.msie) {
        if ($.browser.version == "7.0") {
            $("input[type='button']").css("min-width", "0");
            $("input[type='submit']").css("min-width", "0");
        }
    }
    else {
        $.each($("[id*='chkAttachment_'"), function (key, val) {
            val.hide();
        });
        $("#chkAttachment_1").hide();
        $("#divAttachmentControls").css("position", "fixed");
        $("#divAttachmentControls").css("top", "-100px");
        $("#divAttachment_1").show();
    }
});

function onBodyLoad() {
    try {
        locate(this.offsetTop, 'raterequestslink', 'newraterequestlink');
    }
    catch (e) {
    }
    top.document.getElementById('processing_image').style.display = 'none';

    $('#hidCurrentDateTime').value = GetDate();
    $('#txtHAWBNumber').focus();
}

function DisplayProgress(statusMessage, progressMessage) {
    $("#divUpdateProgress").show();
    $("#lblStatus").innerText = statusMessage;
    if (progressMessage == undefined) {
        progressMessage = statusMessage;
    }
    $("#lblProgressText").innerText = progressMessage;
}

$("#btnPostNewRateRequest").click(function () {
    if (Page_ClientValidate() == false) return false;

    DisplayProgress('Posting new rate request...');
});

function btnApprove_onClick() {
    if (Page_ClientValidate() == false) return false;

    DisplayProgress('Approving rate request...');
}

function btnSave_onClick() {
    if (Page_ClientValidate() == false) return false;

    DisplayProgress('Saving rate request...');
}

function btnApproveAsAdhoc_onClick() {
    if (Page_ClientValidate() == false) return false;

    DisplayProgress('Approving rate request as Adhoc...', 'Approving rate request...');
}

function btnTransferToTariff_onClick() {
    if (Page_ClientValidate() == false) return false;

    DisplayProgress('Transfering rate request to tariff...', 'Transfering to Tariff...');
}

function btnSendBackToReviseRate_onClick() {
    if (Page_ClientValidate() == false) return false;

    DisplayProgress('Sending rate request back to revise rates...', 'Rejecting rate request...');
}

function btnRemoveAllComments_onClick() {
    if (Page_ClientValidate() == false) return false;

    DisplayProgress('Removing comments...');
}

function btnPostComment_onClick() {
    try {
        if (document.getElementById('txtComment').innerText != "") {
            DisplayProgress('Posting comment...');
            return true;
        }
        else {
            document.getElementById('lblStatus').innerText = 'Please fill up comment box to post comment.';

            if (document.getElementById('txtComment').value != "") {
                DisplayProgress('Posting comment...');
                return true;
            }
            else {
                document.getElementById('lblStatus').innerText = 'Please fill up comment box to post comment.';
                document.getElementById('txtComment').focus();
                return false;
            }
        }
    }
    catch (e) {
        document.getElementById('txtComment').focus();
        return false;
    }
}

function btnNeedToReviseRate_onClick() {
    DisplayProgress('Setting up rate request to update details...', 'Setting up rate request...');
}

function btnReject_onClick() {
    DisplayProgress('Rejecting rate request...');
}

function btnRevoke_onClick() {
    DisplayProgress('Revoking rate request...');
}

function btnDelete_onClick() {
    var r = confirm('Are you sure you want to delete this rate request?');
    if (r == true) {
        DisplayProgress('Deleting rate request...');

        return true;
    }
    else {
        return false;
    }
}
/*-------------------------------------------------------------------------*/


//Parsing...
function trim(data) {
    if (data.length > 0) {
        return data.replace(/^\s*|\s*$/g, '');
    } else {
        return "";
    }
}

function setValue(id, value) {
    document.getElementById(id).value = value;
}

function getData(id) {
    var contents = document.getElementById(id).value;
    var data = contents.split("\n");

    var hawbnumber = '';
    var servicelevel = '';
    var servicetype = ''
    var chgwgt = '';
    var shpname = '';
    var shpcity = '';
    var shpzip = '';
    var shoriportcode = '';
    var shpregion = ''
    var consname = ''
    var conportcode = '';
    var concity = '';
    var constate = '';
    var conzip = '';
    var conregion = '';
    var concntrycode = '';
    try {
        if (data.length > 0) {
            if (data[0].indexOf("AIR FREIGHT BOOKING") >= 0) {
                try {
                    hawbnumber = trim(data[1].split("HAWB Number")[1]);
                } catch (e) { }
                try {
                    servicelevel = trim(data[11].split("Service Level")[1].substr(0, 2));
                } catch (e) { }
                try {
                    servicetype = trim(data[11].split("Service Type")[1].substr(0, 4));
                } catch (e) { }

                try {
                    chgwgt = trim(data[12].split("Expect Pcs/Wgt/Vol")[1].substr(12, 6));
                } catch (e) { }

                try {
                    shpname = trim(data[2].split("Name")[1]);
                } catch (e) { }

                shoriportcode = "";
                try {
                    if (trim(data[7].substr(48, 81 - 48)).length > 0) {
                        shpcity = trim(data[7].substr(45, 81 - 48));
                    } else {
                        shpcity = trim(data[5].substr(45, 81 - 48));
                        datazip = trim(data[5].substr(45, 81 - 48)).split(",");
                        for (var i = 0; i < datazip.length; i++) {
                            if (parseInt(datazip[i])) {
                                shpzip = trim(datazip[i]);
                                break;
                            }
                        }
                    }
                } catch (e) { }

                shpregion = "";
                try {
                    consname = trim(data[9].split("Name")[1]);
                }
                catch (e) { }

                try {
                    if (trim(data[13].substr(48, 81 - 48)).length > 0) {
                        constate = trim(data[13].substr(48, 81 - 48));
                    } else {
                        concity = trim(data[11].substr(48, 81 - 48));
                        datazip = trim(data[11].substr(48, 81 - 48)).split(" ");
                        for (i = 0; i < datazip.length; i++) {
                            if (parseInt(datazip[i])) {
                                conzip = trim(datazip[i]);
                            }
                        }
                        constate = trim(data[12].substr(48, 81 - 48));
                    }
                    concntrycode = "";
                }
                catch (e) { }

            }

            else if (data[0].indexOf("Export House Bill Job Registration") >= 0) {

                try {
                    hawbnumber = trim(data[2].substr(4, 22));
                } catch (e) { }

                try {
                    //shipmentdate = trim(data[0].substr(61, 81 - 61));
                } catch (e) { }

                servicelevel = "";
                servicetype = "";

                try {
                    chgwgt = trim(data[20].substr(72, 81 - 72));
                } catch (e) { }

                try {
                    shpname = trim(data[6].substr(7, 31));
                } catch (e) { }

                shoriportcode = "";
                try {
                    shpcity = trim(data[11].substr(7, 30));
                } catch (e) { }
                try {
                    if (trim(data[10].split("4")[1]).length > 0) {
                        constate = trim(data[10].split("4")[1]);
                    } else {
                        datazip = data[8].substr(7, 30).split(",");
                        for (i = 0; i < datazip.length; i++) {
                            if (parseInt(datazip[i])) {
                                shpzip = trim(datazip[i]);
                                break;
                            }
                        }
                    }
                } catch (e) { }

                shpregion = "";
                try {
                    consname = trim(data[6].substr(45, 81 - 45));
                    concity = trim(data[11].substr(46, 81 - 46));
                } catch (e) { }

                try {
                    if (trim(data[10].split("4")[2]).length > 0) {
                        constate = trim(data[10].split("4")[2]);
                    } else {
                        datazip = data[8].substr(32, 81 - 30).split(",");
                        conzip = trim(data[8].substr(32, 81 - 30));
                        constate = trim(data[9].substr(45, 81 - 42));
                        for (i = 0; i < datazip.length; i++) {
                            if ((new Number(datazip[i])).toString() != "NaN") {
                                conzip = trim(datazip[i]);
                                break;
                            }
                        }
                    }
                } catch (e) { }
                //conzip =trim(data[42].split(" ")[data[42].split(" ").length-1]);
                // constate = "";
                concntrycode = "";
            }

            else {
                if (data.length > 0) {
                    if (data[2].indexOf("H(AWB)") >= 0) {
                        try {
                            hawbnumber = trim(data[2].split("H(AWB)")[1]).split(" ")[0];
                        } catch (e) { }

                        try {
                            chgwgt = data[8].split(" ");
                            chgwgt = chgwgt[chgwgt.length - 1];
                        }
                        catch (e) {
                        }

                        for (var i = 0; i < data.length; i++) {
                            //Shipper Details
                            if (data[i].indexOf("Name 1") >= 0 && data[i].indexOf("Shipper") >= 0) {

                                shpname = trim(data[i].split("Shipper")[0].split("Name 1")[1]);
                                shpcity = trim(data[i + 4].split("City")[1]);
                                shpstate = trim(data[i + 5].split(shpname)[0].split("State")[1]);
                                shpzip = trim(trim(data[i + 6].split("Zipcode")[1]).split(" ")[0]);
                            }

                            // Consignee Details
                            if (data[i].indexOf("Name 1") >= 0 && data[i].indexOf("Consignee") >= 0) {

                                consname = trim(data[i].split("Consignee")[0].split("Name 1")[1]);
                                concity = trim(data[i + 4].split("City")[1]);
                                constate = trim(data[i + 5].split(consname)[0].split("State")[1]);
                                conzip = trim(trim(data[i + 6].split("Zipcode")[1]).split(" ")[0]);
                                concntrycode = trim(trim(data[i + 7].split("Country")[1]).split(" ")[0]);
                            }
                        }
                    }
                }
            }
        }
    } catch (e) {
        alert(e.message);
        return false;
    }
    setValue("txtHAWBNumber", hawbnumber);
    //setValue("txtShipDate", shipmentdate);
    setValue("txtWeight", chgwgt);
    setValue("cmbServiceLevel", servicelevel);
    setValue("cmbForwarderService", servicetype);
    setValue("txtShipperName", shpname);
    setValue("txtOriginCity", shpcity);
    setValue("txtOriginZipCode", shpzip);
    setValue("txtOriginAirport", shoriportcode);
    setValue("cmbOriginRegion", shpregion);
    setValue("txtConsigneeName", consname);
    setValue("txtDestAirport", conportcode);
    setValue("txtDestCity", concity);
    setValue("txtDestState", constate);
    setValue("txtDestZipCode", conzip);
    setValue("cmbDestRegion", conregion);
    setValue("cmbDestCountry", concntrycode);
}

//function GetValueByLabel(contents, lblText, separator, valStep) {
//    var res = "";

//    try {
//        var lblLoc = contents.indexOf(lblText);
//        var lblLen = lblText.length;
//        var valLoc = lblLoc + lblLen;

//        for (i = 0; i < valStep; i++) {
//            while (contents.substr(valLoc, 1) == separator)valLoc++;
//        }

//        res = trim(contents.substr(valLoc, (contents.indexOf(separator, valLoc) - valLoc)));
//    }
//    catch (e){ }

//    return res;
//}

function lookupForFile(controlNumber) {
    //document.getElementById('fUpload_' + controlNumber).click();
    $("#fUpload_" + controlNumber)[0].click();
    //$('#<%=fUpload_1.ClientID %>').click();
}

function attachFile(controlNumber) {
    if (!$.browser.msie) {
        var l = document.getElementById('fUpload_' + controlNumber).files.length;
        if (l > 0) {
            document.getElementById('linkAttachFile_' + controlNumber).innerHTML = document.getElementById('fUpload_' + controlNumber).files[0].name + " (" + Math.round((document.getElementById('fUpload_' + controlNumber).files[0].size / 1024)) + "KB)";
            $('#chkAttachment_' + controlNumber).show();
            $('#divAttachment_' + (controlNumber + 1)).show();
        }
    }
}

function moveDivToBottom(divId) {
    var objDiv = document.getElementById(divId);
    objDiv.scrollTop = objDiv.scrollHeight;
}

/* General functions start*/

function GetDate() {
    var t = new Date();
    return ((t.getMonth() + 1) + '/' + t.getDate() + '/' + t.getFullYear() + ' ' + t.getHours() + ':' + t.getMinutes() + ':' + t.getSeconds());
}

/* General functions over */